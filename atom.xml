<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>程序员Yz</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zhuangyea.github.io/"/>
  <updated>2020-08-11T13:47:38.898Z</updated>
  <id>http://zhuangyea.github.io/</id>
  
  <author>
    <name>Colin Ye</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SkyWalking源码编译及本地调试</title>
    <link href="http://zhuangyea.github.io/2020/08/11/docker/SkyWalking%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E5%8F%8A%E8%B0%83%E8%AF%95/"/>
    <id>http://zhuangyea.github.io/2020/08/11/docker/SkyWalking源码编译及调试/</id>
    <published>2020-08-11T11:22:00.000Z</published>
    <updated>2020-08-11T13:47:38.898Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、环境说明"><a href="#一、环境说明" class="headerlink" title="一、环境说明"></a>一、环境说明</h2><ul><li>Linux Centos7</li><li>ElasticSearch 7.8.0</li><li>SkyWalking 8.0.1</li><li>JDK 1.8</li><li>Idea 2020.01</li></ul><h2 id="二、从-GitHub-构建"><a href="#二、从-GitHub-构建" class="headerlink" title="二、从 GitHub 构建"></a>二、从 GitHub 构建</h2><ol><li><p>预备好 Git, JDK8 以及 Maven3</p></li><li><p><code>git clone https://github.com/apache/skywalking.git</code></p></li><li><p><code>cd skywalking/</code></p></li><li><p>使用 <code>git checkout [tagname]</code> 切换到指定的 tag (可选的, 只有当你想编译某个特定版本的代码时才需要)</p></li><li><p><code>git submodule init</code></p></li><li><p><code>git submodule update</code></p></li><li><p>这步可忽略。下载maven、npm包慢以及Mac权限问题所以我修改了代码</p><ol><li><p>Makefile：增加 –settings=/Users/yezhuang/Documents/software/maven/apache-maven-3.6.0/conf/settings.xml<br> <img src="/img/source/docker/skywalking/8.png" alt="image.png"></p></li><li><p>apm-webapp/pom.xml：增加 –registry=<a href="https://registry.npm.taobao.org" target="_blank" rel="noopener">https://registry.npm.taobao.org</a> –unsafe-perm</p><ul><li>–unsafe-perm解决mac权限问题</li></ul><p><img src="/img/source/docker/skywalking/9.png" alt="image.png"></p></li></ol></li><li><p>这步可忽略。要求变更logo图标</p><ol><li>skywalking-ui/src/components/rk-header.vue<br> <img src="/img/source/docker/skywalking/10.png" alt="image.png"></li></ol></li><li><p>编译及打包</p><ol><li>运行 <code>./mvnw clean package -DskipTests</code></li><li>docker镜像打包：export HUB=skywalking &amp;&amp; export TAG=8.0.1 &amp;&amp; export ES_VERSION=es7 &amp;&amp; export SKIP_TEST=true &amp;&amp; make docker</li></ol></li><li><p>所有打出来的包都在目录 <code>/dist</code> 下 (Linux 下为 .tar.gz, Windows 下为 .zip)</p></li><li><p>如果是打docker镜像包，通过docker images查看</p><p> <img src="/img/source/docker/skywalking/11.png" alt="images.png"></p></li></ol><h2 id="三、本地调试"><a href="#三、本地调试" class="headerlink" title="三、本地调试"></a>三、本地调试</h2><ol><li><p>创建测试工程<br><img src="/img/source/docker/skywalking/12.png" alt="images.png"></p></li><li><p>在同一工程中通过导入 module 方式到 skywalking<br><img src="/img/source/docker/skywalking/13.png" alt="images.png"></p></li><li><p>导入 skywalking 工程<br><img src="/img/source/docker/skywalking/14.png" alt="images.png"></p></li><li><p>在联调工程的 JVM 参数中指定 skywalking 编译结果目录<br><img src="/img/source/docker/skywalking/4.png" alt="images.png"></p></li><li><p>启动工程调试（在需要调试的代码上打断点）<br><img src="/img/source/docker/skywalking/15.png" alt="images.png"></p></li><li><p>验证，我增加了制定消息头</p><ol><li><p>页面请求<br><img src="/img/source/docker/skywalking/16.png" alt="images.png"></p></li><li><p>skywalking页面<br><img src="/img/source/docker/skywalking/18.png" alt="images.png"></p></li></ol></li></ol><blockquote><p>借鉴文章如下(如果涉及侵权，请联系作者进行删除、修改):<br><a href="https://github.com/apache/skywalking/blob/master/docs/en/guides/How-to-build.md" target="_blank" rel="noopener">官网构建</a><br><a href="https://skyapm.github.io/document-cn-translation-of-skywalking/zh/8.0.0/guides/How-to-build.html" target="_blank" rel="noopener">社区中文版</a><br><a href="https://tianjunwei.blog.csdn.net/article/details/107236594" target="_blank" rel="noopener">skywalking 开发环境编译及联调</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、环境说明&quot;&gt;&lt;a href=&quot;#一、环境说明&quot; class=&quot;headerlink&quot; title=&quot;一、环境说明&quot;&gt;&lt;/a&gt;一、环境说明&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Linux Centos7&lt;/li&gt;
&lt;li&gt;ElasticSearch 7.8.0&lt;/li&gt;

      
    
    </summary>
    
      <category term="运维" scheme="http://zhuangyea.github.io/categories/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="SkyWalking" scheme="http://zhuangyea.github.io/categories/%E8%BF%90%E7%BB%B4/SkyWalking/"/>
    
    
      <category term="SkyWalking" scheme="http://zhuangyea.github.io/tags/SkyWalking/"/>
    
  </entry>
  
  <entry>
    <title>使用docker-compose搭建SkyWalking环境</title>
    <link href="http://zhuangyea.github.io/2020/08/11/docker/%E4%BD%BF%E7%94%A8docker-compose%E6%90%AD%E5%BB%BASkyWalking%E7%8E%AF%E5%A2%83/"/>
    <id>http://zhuangyea.github.io/2020/08/11/docker/使用docker-compose搭建SkyWalking环境/</id>
    <published>2020-08-11T08:28:00.000Z</published>
    <updated>2020-08-11T14:57:18.440Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、环境说明"><a href="#一、环境说明" class="headerlink" title="一、环境说明"></a>一、环境说明</h2><ul><li>Linux Centos7</li><li>ElasticSearch 7.8.0</li><li>SkyWalking 8.0.1</li></ul><h2 id="二、环境搭建"><a href="#二、环境搭建" class="headerlink" title="二、环境搭建"></a>二、环境搭建</h2><ol><li><p>编写docker-compose.yml文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">version: '3.3'</span><br><span class="line">services:</span><br><span class="line">  elasticsearch:</span><br><span class="line">    image: elasticsearch:7.8.0</span><br><span class="line">    container_name: elasticsearch</span><br><span class="line">    restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - 9200:9200</span><br><span class="line">    environment:</span><br><span class="line">      discovery.type: single-node</span><br><span class="line">      TZ: Asia/Shanghai</span><br><span class="line">    #volumes:</span><br><span class="line">    #   - ./elasticsearch/logs:/usr/share/elasticsearch/logs</span><br><span class="line">    #   - ./elasticsearch/data:/usr/share/elasticsearch/data</span><br><span class="line">    #   - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml</span><br><span class="line">    ulimits:</span><br><span class="line">      memlock:</span><br><span class="line">        soft: -1</span><br><span class="line">        hard: -1</span><br><span class="line">  oap:</span><br><span class="line">    image: apache/skywalking-oap-server:8.0.1-es7</span><br><span class="line">    container_name: oap</span><br><span class="line">    depends_on:</span><br><span class="line">      - elasticsearch</span><br><span class="line">    links:</span><br><span class="line">      - elasticsearch</span><br><span class="line">    restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - 11800:11800</span><br><span class="line">      - 12800:12800</span><br><span class="line">    environment:</span><br><span class="line">      SW_STORAGE: elasticsearch7  # 指定ES版本</span><br><span class="line">      SW_STORAGE_ES_CLUSTER_NODES: elasticsearch:9200</span><br><span class="line">      TZ: Asia/Shanghai</span><br><span class="line">    # volumes:</span><br><span class="line">    #  - ./config/alarm-settings.yml:/skywalking/config/alarm-settings.yml</span><br><span class="line">  ui:</span><br><span class="line">    image: apache/skywalking-ui:8.0.1</span><br><span class="line">    container_name: ui</span><br><span class="line">    depends_on:</span><br><span class="line">      - oap</span><br><span class="line">    links:</span><br><span class="line">      - oap</span><br><span class="line">    restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - 8080:8080</span><br><span class="line">    environment:</span><br><span class="line">      SW_OAP_ADDRESS: oap:12800</span><br><span class="line">      TZ: Asia/Shanghai</span><br></pre></td></tr></table></figure></li><li><p>启动docker</p><p>启动容器：<code>docker-compose up -d</code></p><p>查看容器：<code>docker-compose ps</code></p><p>删除容器：<code>docker-compose rm</code></p></li><li><p>验证</p><p>浏览器中输入：<a href="http://localhost:8080" target="_blank" rel="noopener">http://localhost:8080</a></p></li></ol><h2 id="三、Java应用接入"><a href="#三、Java应用接入" class="headerlink" title="三、Java应用接入"></a>三、Java应用接入</h2><ol><li><p>探针下载</p><ul><li><p><a href="https://www.apache.org/dyn/closer.cgi/skywalking/8.0.1/apache-skywalking-apm-es7-8.0.1.tar.gz" target="_blank" rel="noopener">apache-skywalking-apm-es7-8.0.1.tar.gz</a></p></li><li><p><a href="http://skywalking.apache.org/downloads/" target="_blank" rel="noopener">其他版本下载</a></p></li><li><p>探针目录结构<br>主要关注agent下的文件<br>– config  配置文件存放位置<br>– optional-plugins    选装插件，如果使用将jar文件移动到plugins下</p><p><img src="/img/source/docker/skywalking/3.png" alt="image.png"></p></li></ul></li><li><p>idea配置探针</p><p><img src="/img/source/docker/skywalking/4.png" alt="image.png"></p><ul><li>设置 VM options：-javaagent:/${Path}/apache-skywalking-apm-bin-es7/agent/skywalking-agent.jar</li><li>设置环境变量<ul><li>SW_AGENT_NAME：项目名称</li><li>SW_AGENT_COLLECTOR_BACKEND_SERVICES：ip:port（oap服务地址）</li></ul></li></ul></li></ol><ol start="3"><li><p>jar配置探针</p><ul><li>java -jar -javaagent:/${Path}/apache-skywalking-apm-bin-es7/agent/skywalking-agent.jar  -DSW_AGENT_NAME=项目名称 demo.jar</li></ul></li><li><p>验证</p><p><img src="/img/source/docker/skywalking/5.png" alt="image.png"><br><img src="/img/source/docker/skywalking/6.png" alt="image.png"></p></li></ol><h2 id="四、nginx服务接入"><a href="#四、nginx服务接入" class="headerlink" title="四、nginx服务接入"></a>四、nginx服务接入</h2><ol><li>参考<a href="https://github.com/apache/skywalking-nginx-lua" target="_blank" rel="noopener">skywalking-nginx-lua</a>;<ul><li>Nginx代理为由Nginx LUA模块提供支持的Nginx提供了本机跟踪功能</li><li>我是使用openresty集成的，openresty启动时候指定skywalking-nginx-lua/examples/nginx.conf<br><img src="/img/source/docker/skywalking/7.png" alt="image.png"></li><li>效果图<br><img src="/img/source/docker/skywalking/19.png" alt="image.png"><br><img src="/img/source/docker/skywalking/5.png" alt="image.png"></li></ul></li></ol><h2 id="五、题外话"><a href="#五、题外话" class="headerlink" title="五、题外话"></a>五、题外话</h2><p> 相信不只我一人(至少我再群里看到的就不下10个人)因为下面这张图片，去开源群里问如何解决<br> <img src="/img/source/docker/skywalking/19.jpg" alt="image.png"></p><p> 解决方案就是因为少加了一个参数<br> <img src="/img/source/docker/skywalking/20.png" alt="image.png"></p><p> 归根结底是因为不去读文档，我就是因为老英文文档读不懂，一点点的就开始不读文档了。有问题百度、谷歌搜，搜不到就问人、加群问。直到被skywalking开源大佬吴晟怼了之后，才发现自己丢失了非常重要的读文档能力。非常感谢大佬点醒我！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、环境说明&quot;&gt;&lt;a href=&quot;#一、环境说明&quot; class=&quot;headerlink&quot; title=&quot;一、环境说明&quot;&gt;&lt;/a&gt;一、环境说明&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Linux Centos7&lt;/li&gt;
&lt;li&gt;ElasticSearch 7.8.0&lt;/li&gt;

      
    
    </summary>
    
      <category term="运维" scheme="http://zhuangyea.github.io/categories/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="SkyWalking" scheme="http://zhuangyea.github.io/categories/%E8%BF%90%E7%BB%B4/SkyWalking/"/>
    
    
      <category term="SkyWalking" scheme="http://zhuangyea.github.io/tags/SkyWalking/"/>
    
  </entry>
  
  <entry>
    <title>linux下docker环境及docker-compose环境安装</title>
    <link href="http://zhuangyea.github.io/2020/08/07/docker/docker%E7%8E%AF%E5%A2%83%E5%8F%8Adocker-compose%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/"/>
    <id>http://zhuangyea.github.io/2020/08/07/docker/docker环境及docker-compose环境安装/</id>
    <published>2020-08-07T08:16:00.000Z</published>
    <updated>2020-08-11T08:42:44.906Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、docker环境搭建"><a href="#一、docker环境搭建" class="headerlink" title="一、docker环境搭建"></a>一、docker环境搭建</h3><p><strong><em><a href="https://docs.docker.com/engine/install/centos/" target="_blank" rel="noopener">官网安装地址</a></em></strong></p><ol><li><p>卸载旧版本</p><p>较旧的Docker版本称为<code>docker</code>或<code>docker-engine</code>。如果已安装这些程序，请卸载它们以及相关的依赖项。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo yum remove docker \</span><br><span class="line">                 docker-client \</span><br><span class="line">                 docker-client-latest \</span><br><span class="line">                 docker-common \</span><br><span class="line">                 docker-latest \</span><br><span class="line">                 docker-latest-logrotate \</span><br><span class="line">                 docker-logrotate \</span><br><span class="line">                 docker-engine</span><br></pre></td></tr></table></figure></li><li><p>安装依赖</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y yum-utils</span><br><span class="line"></span><br><span class="line">sudo yum-config-manager \</span><br><span class="line">   --add-repo \</span><br><span class="line">   https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure></li><li><p>安装docker</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure></li><li><p>查看docker版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker -v</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="二、docker-compose环境搭建"><a href="#二、docker-compose环境搭建" class="headerlink" title="二、docker-compose环境搭建"></a>二、docker-compose环境搭建</h3><p><strong><em><a href="https://docs.docker.com/compose/install/" target="_blank" rel="noopener">官网安装地址</a></em></strong></p><ol><li><p>运行以下命令以下载Docker Compose的当前稳定版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo curl -L "https://github.com/docker/compose/releases/download/1.26.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure></li><li><p>将可执行权限应用于二进制文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure></li><li><p>查看docker-compose版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose -v</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="三、docker配置文件修改"><a href="#三、docker配置文件修改" class="headerlink" title="三、docker配置文件修改"></a>三、docker配置文件修改</h3><ol><li><p>修改配置文件（如果文件不存在，创建一个）</p><p><code>vim /etc/docker/docker/daemon.json</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"debug"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"registry-mirrors"</span>: [</span><br><span class="line">    <span class="string">"http://hub-mirror.c.163.com"</span>,</span><br><span class="line">    <span class="string">"https://registry.aliyuncs.com"</span>,</span><br><span class="line">    <span class="string">"https://registry.docker-cn.com"</span>,</span><br><span class="line">    <span class="string">"https://docker.mirrors.ustc.edu.cn"</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"insecure-registries"</span>: [</span><br><span class="line">    <span class="string">"ip:host"</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"experimental"</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="四、docker常用命令"><a href="#四、docker常用命令" class="headerlink" title="四、docker常用命令"></a>四、docker常用命令</h3><ol><li><p>容器命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">docker ps# 查看正在运行容器</span><br><span class="line">docker ps -a# 查看所有容器</span><br><span class="line">docker run -dit --name=crawld -p 30030:10002 deb7db7d4b75# 启动容器。对外端口：容器端口</span><br><span class="line">docker logs --details  82d68c1534c6# 查看日志</span><br><span class="line">docker logs -f -t --since="2020-05-29" --tail=10 b18698736657# 查看指定日期之后的日志</span><br><span class="line">docker stop 82d68c1534c6# 停止容器</span><br><span class="line">docker rmf deb7db7d4b75# 删除容器</span><br><span class="line">docker exec -it 97191593e2b2 /bin/bash# 进入容器</span><br><span class="line">docker tag skywalking/ui:8.0.1 ip:port/basic-servers/skywalking-ui:8.0.1 # Tag标记本地镜像</span><br><span class="line">docker push ip:port/basic-servers/skywalking-ui:8.0.1 #  镜像上传</span><br></pre></td></tr></table></figure></li><li><p>镜像命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker pull docker.io/airdock/oracle-jdk# 拉取镜像（jdk为例）</span><br><span class="line">docker build -t api-gateway:v1 .# 生成镜像。将当前目录打包并生成名字叫api-gateway的镜像</span><br><span class="line">docker rmi api-gateway:v1# 删除镜像</span><br></pre></td></tr></table></figure></li></ol><h3 id="五、docker-compose"><a href="#五、docker-compose" class="headerlink" title="五、docker-compose"></a>五、docker-compose</h3><ol><li><p>docker-compose命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d# 启动容器</span><br><span class="line">docker-compose stop# 停止容器</span><br><span class="line">docker-compose rm# 删除容器</span><br><span class="line">docker-compose restart# 重启容器</span><br></pre></td></tr></table></figure></li><li><p>docker-compose.yml示例</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3.3'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">  elasticsearch:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="attr">elasticsearch:7.1.1</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">elasticsearch</span></span><br><span class="line"><span class="attr">    restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">    privileged:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    user:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="number">9200</span><span class="string">:9200</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line">      <span class="string">discovery.type:</span> <span class="string">single-node</span></span><br><span class="line"><span class="attr">      TZ:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="bullet">       -</span> <span class="string">./elasticsearch/logs:/usr/share/elasticsearch/logs</span></span><br><span class="line"><span class="bullet">       -</span> <span class="string">./elasticsearch/data:/usr/share/elasticsearch/data</span></span><br><span class="line"><span class="bullet">       -</span> <span class="string">./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml</span></span><br><span class="line">       <span class="comment">#- /etc/localtime:/etc/localtime</span></span><br><span class="line"><span class="attr">    ulimits:</span></span><br><span class="line"><span class="attr">      memlock:</span></span><br><span class="line"><span class="attr">        soft:</span> <span class="bullet">-1</span></span><br><span class="line"><span class="attr">        hard:</span> <span class="bullet">-1</span></span><br><span class="line"><span class="attr">  oap:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="attr">skywalking-oap:8.0.1</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">oap</span></span><br><span class="line"><span class="attr">    depends_on:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">elasticsearch</span></span><br><span class="line"><span class="attr">    links:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">elasticsearch</span></span><br><span class="line"><span class="attr">    restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="number">11800</span><span class="string">:11800</span></span><br><span class="line"><span class="bullet">      -</span> <span class="number">12800</span><span class="string">:12800</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="attr">      SW_STORAGE:</span> <span class="string">elasticsearch7</span></span><br><span class="line"><span class="attr">      SW_STORAGE_ES_CLUSTER_NODES:</span> <span class="attr">elasticsearch:9200</span></span><br><span class="line"><span class="attr">      TZ:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">./config/alarm-settings.yml:/skywalking/config/alarm-settings.yml</span></span><br><span class="line">      <span class="comment">#- /etc/localtime:/etc/localtime</span></span><br><span class="line">      <span class="comment"># - ./config/server-core-6.6.0.jar:/skywalking/oap-libs/server-core-6.6.0.jar</span></span><br><span class="line">      <span class="comment"># - ./config/storage-elasticsearch-plugin-6.6.0.jar:/skywalking/oap-libs/storage-elasticsearch-plugin-6.6.0.jar</span></span><br><span class="line"><span class="attr">  ui:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="attr">skywalking-ui:8.0.1</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">ui</span></span><br><span class="line"><span class="attr">    depends_on:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">oap</span></span><br><span class="line"><span class="attr">    links:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">oap</span></span><br><span class="line"><span class="attr">    restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="number">8080</span><span class="string">:8080</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="attr">      SW_OAP_ADDRESS:</span> <span class="attr">oap:12800</span></span><br><span class="line"><span class="attr">      TZ:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line">    <span class="comment">#volumes:</span></span><br><span class="line">    <span class="comment">#  - /etc/localtime:/etc/localtime</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;一、docker环境搭建&quot;&gt;&lt;a href=&quot;#一、docker环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一、docker环境搭建&quot;&gt;&lt;/a&gt;一、docker环境搭建&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;&lt;a href=&quot;https://d
      
    
    </summary>
    
      <category term="运维" scheme="http://zhuangyea.github.io/categories/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="docker" scheme="http://zhuangyea.github.io/categories/%E8%BF%90%E7%BB%B4/docker/"/>
    
    
      <category term="docker" scheme="http://zhuangyea.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>Alibaba canal组件的安装及使用</title>
    <link href="http://zhuangyea.github.io/2020/04/27/alibaba/canal%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8-JAVA/"/>
    <id>http://zhuangyea.github.io/2020/04/27/alibaba/canal安装及使用-JAVA/</id>
    <published>2020-04-27T11:36:00.000Z</published>
    <updated>2020-04-29T08:23:26.663Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、前言：环境准备"><a href="#一、前言：环境准备" class="headerlink" title="一、前言：环境准备"></a>一、前言：环境准备</h1><p>   蓝色字体可点击，安装包下载</p><ul><li>Linux</li><li>MySql 5.7</li><li><a href="https://github.com/alibaba/canal/releases/download/canal-1.1.4/canal.deployer-1.1.4.tar.gz" target="_blank" rel="noopener">canal 1.1.4</a></li><li><a href="https://github.com/alibaba/canal/releases/download/canal-1.1.4/canal.admin-1.1.4.tar.gz" target="_blank" rel="noopener">canal-admin 1.1.4</a></li><li><a href="https://www.apache.org/dyn/closer.cgi?path=/kafka/2.5.0/kafka_2.12-2.5.0.tgz" target="_blank" rel="noopener">kafka_2.12-2.5.0</a></li><li><a href="https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz" target="_blank" rel="noopener">apache-zookeeper-3.6.0</a></li></ul><hr><h1 id="二、名词解释"><a href="#二、名词解释" class="headerlink" title="二、名词解释"></a>二、名词解释</h1><ul><li><strong><a href="https://github.com/alibaba/canal/wiki/QuickStart" target="_blank" rel="noopener">canal</a></strong> [kə’næl]，译意为水道/管道/沟渠，主要用途是基于 MySQL 数据库增量日志解析，提供增量数据订阅和消费</li><li><strong><a href="https://github.com/alibaba/canal/wiki/Canal-Admin-Guide" target="_blank" rel="noopener">canal-admin</a></strong> 设计上是为canal提供整体配置管理、节点运维等面向运维的功能，提供相对友好的WebUI操作界面，方便更多用户快速和安全的操作</li><li><strong><a href="https://github.com/alibaba/canal/wiki/Canal-Kafka-RocketMQ-QuickStart" target="_blank" rel="noopener">Canal Kafka RocketMQ QuickStart</a></strong> canal 1.1.1版本之后, 默认支持将canal server接收到的binlog数据直接投递到MQ, 目前默认支持的MQ系统有:<ul><li>kafka: <a href="https://github.com/apache/kafka" target="_blank" rel="noopener">https://github.com/apache/kafka</a></li><li>RocketMQ : <a href="https://github.com/apache/rocketmq" target="_blank" rel="noopener">https://github.com/apache/rocketmq</a></li></ul></li></ul><hr><h1 id="三、canal-SpringBoot模式"><a href="#三、canal-SpringBoot模式" class="headerlink" title="三、canal + SpringBoot模式"></a>三、canal + SpringBoot模式</h1><h2 id="3-1-canal准备"><a href="#3-1-canal准备" class="headerlink" title="3.1 canal准备"></a>3.1 canal准备</h2><hr><ul><li><p>对于自建 MySQL , 需要先开启 Binlog 写入功能，配置 binlog-format 为 ROW 模式，my.cnf 中配置如下</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">log-bin=mysql-bin # 开启 binlog</span><br><span class="line">binlog-format=ROW # 选择 ROW 模式</span><br><span class="line">server_id=1 # 配置 MySQL replaction 需要定义，不要和 canal 的 slaveId 重复</span><br></pre></td></tr></table></figure><p>  注意：针对阿里云 RDS for MySQL , 默认打开了 binlog , 并且账号默认具有 binlog dump 权限 , 不需要任何权限或者 binlog 设置,可以直接跳过这一步</p></li><li><p>授权 canal 链接 MySQL 账号具有作为 MySQL slave 的权限, 如果已有账户可直接 grant</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CREATE USER canal IDENTIFIED BY &apos;canal&apos;;  </span><br><span class="line">GRANT SELECT, REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO &apos;canal&apos;@&apos;%&apos;;</span><br><span class="line">-- GRANT ALL PRIVILEGES ON *.* TO &apos;canal&apos;@&apos;%&apos; ;</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure></li></ul><h2 id="3-2-canal启动"><a href="#3-2-canal启动" class="headerlink" title="3.2 canal启动"></a>3.2 canal启动</h2><hr><ul><li><p>下载 canal, 访问 release 页面 , 选择需要的包下载, 如以 1.1.4 版本为例<br>  wget <a href="https://github.com/alibaba/canal/releases/download/canal-1.1.4/canal.deployer-1.1.4.tar.gz" target="_blank" rel="noopener">https://github.com/alibaba/canal/releases/download/canal-1.1.4/canal.deployer-1.1.4.tar.gz</a></p></li><li><p>解压完成后，进入 canal 目录，可以看到如下结构<br>  <img src="/img/alibaba/canal/1.png" alt="image" title="我是图片描述"></p></li><li><p>配置修改</p><pre><code>vim conf/example/instance.properties#position info，需要改成自己的数据库信息canal.instance.master.address = 127.0.0.1:3306 canal.instance.dbUsername = root  canal.instance.dbPassword = 123456# mq configcanal.mq.topic=mytopic</code></pre></li><li><p>启动<br>  sh bin/startup.sh</p></li><li><p>查看 server 日志<br>  tail -f logs/canal/canal.log</p></li><li><p>查看 instance 的日志<br>  tail -f logs/example/example.log</p></li><li><p>关闭<br>  sh bin/stop.sh</p></li></ul><h2 id="3-3-让canal成为SpringBoot组件"><a href="#3-3-让canal成为SpringBoot组件" class="headerlink" title="3.3 让canal成为SpringBoot组件"></a>3.3 <a href="https://blog.csdn.net/u013930425/article/details/80507201" target="_blank" rel="noopener">让canal成为SpringBoot组件</a></h2><hr><ul><li><p>下载SpringBoot canal项目 <a href="https://github.com/wanwujiedao/spring-boot-starter-canal" target="_blank" rel="noopener">项目地址</a><br>  <img src="/img/alibaba/canal/2.png" alt="image" title="我是图片描述"></p></li><li><p>修改配置文件<br>  canal-test/application.properties<br>  <img src="/img/alibaba/canal/3.png" alt="image" title="我是图片描述"><br>  <em>注意</em>：红框中的配置要与canal配置文件instance.properties所在目录匹配</p></li><li><p>启动canal-test<br>  <img src="/img/alibaba/canal/4.png" alt="image" title="我是图片描述"></p></li><li><p>测试，修改本地库数据，查看控制台<br>  <img src="/img/alibaba/canal/5.png" alt="image" title="我是图片描述"></p></li></ul><hr><h1 id="四、canal-canal-admin-MQ模式（单节点）"><a href="#四、canal-canal-admin-MQ模式（单节点）" class="headerlink" title="四、canal + canal-admin + MQ模式（单节点）"></a>四、canal + canal-admin + MQ模式（单节点）</h1><p><em>zookeeper+kafka安装过程省略</em></p><h2 id="4-1-canal-admin准备"><a href="#4-1-canal-admin准备" class="headerlink" title="4.1 canal-admin准备"></a>4.1 canal-admin准备</h2><hr><ul><li><p>canal-admin的限定依赖：</p><ul><li>MySQL，用于存储配置和节点等相关数据</li><li>canal版本，要求&gt;=1.1.4 (需要依赖canal-server提供面向admin的动态运维管理接口)</li></ul></li><li><p>部署</p><ol><li><p>下载 canal-admin, 访问 release 页面 , 选择需要的包下载, 如以 1.1.4 版本为例</p></li><li><p>wget <a href="https://github.com/alibaba/canal/releases/download/canal-1.1.4/canal.admin-1.1.4.tar.gz" target="_blank" rel="noopener">https://github.com/alibaba/canal/releases/download/canal-1.1.4/canal.admin-1.1.4.tar.gz</a></p></li><li><p>解压完成后，进入 canal-admin 目录，可以看到如下结构<br><img src="/img/alibaba/canal/6.png" alt="image" title="我是图片描述"></p></li><li><p>配置修改<br>vim conf/application.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: 8089</span><br><span class="line">spring:</span><br><span class="line">  jackson:</span><br><span class="line">    date-format: yyyy-MM-dd HH:mm:ss</span><br><span class="line">    time-zone: GMT+8</span><br><span class="line"></span><br><span class="line">spring.datasource:</span><br><span class="line">  address: 127.0.0.1:3306</span><br><span class="line">  database: canal_manager</span><br><span class="line">  username: canal</span><br><span class="line">  password: canal</span><br><span class="line">  driver-class-name: com.mysql.jdbc.Driver</span><br><span class="line">  url: jdbc:mysql://$&#123;spring.datasource.address&#125;/$&#123;spring.datasource.database&#125;?useUnicode=true&amp;characterEncoding=UTF-8&amp;useSSL=false</span><br><span class="line">  hikari:</span><br><span class="line">    maximum-pool-size: 30</span><br><span class="line">    minimum-idle: 1</span><br><span class="line"></span><br><span class="line">canal:</span><br><span class="line">  adminUser: admin</span><br><span class="line">  adminPasswd: 123456</span><br></pre></td></tr></table></figure></li><li><p>初始化元数据库</p><pre><code>mysql -h127.1 -uroot -p# 导入初始化SQL&gt; source conf/canal_manager.sql</code></pre></li><li><p>启动<br>sh bin/startup.sh</p></li><li><p>查看 admin 日志<br>tail -f logs/admin.log</p><p>此时代表canal-admin已经启动成功，可以通过 <a href="http://127.0.0.1:8089/" target="_blank" rel="noopener">http://127.0.0.1:8089/</a> 访问，默认密码：admin/123456<br><img src="/img/alibaba/canal/7.png" alt="image" title="我是图片描述"></p></li><li><p>关闭<br>sh bin/stop.sh</p></li></ol></li></ul><h2 id="4-2-canal-server启动"><a href="#4-2-canal-server启动" class="headerlink" title="4.2 canal-server启动"></a>4.2 canal-server启动</h2><hr><ul><li><p>修改配置文件<br>vim conf/canal_local.properties</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># register ip</span><br><span class="line">canal.register.ip = 172.17.7.81 #canal服务所在服务器IP</span><br><span class="line"></span><br><span class="line"># canal admin config</span><br><span class="line">canal.admin.manager = 172.17.7.81:8089</span><br><span class="line">canal.admin.port = 11110</span><br><span class="line">canal.admin.user = admin</span><br><span class="line">canal.admin.passwd = 6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9</span><br><span class="line"># admin auto register</span><br><span class="line">canal.admin.register.auto = true</span><br><span class="line">canal.admin.register.cluster =</span><br></pre></td></tr></table></figure></li><li><p>配置密码<br>上面配置的webUI的密码暗文需要到mysql的数据库查询的，我们配置的密码是123456，所以需要到数据库产生</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select password(123456);</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">| password(123456)                          |</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">| *6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9 |</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">1 row in set, 1 warning (0.00 sec)</span><br></pre></td></tr></table></figure></li></ul><ul><li>启动canal服务<br>要使用canal-admin，所以在启动方面也有一点不同，在bin目录下执行startup.sh 传入参数local<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 启动方法一：</span><br><span class="line">sh bin/startup.sh local</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 启动方法二：</span><br><span class="line"># ---将canal_local.properties配置文件的名字改成canal.properties(删除原有的)</span><br><span class="line">sh bin/startup.sh</span><br></pre></td></tr></table></figure></li></ul><h2 id="4-3-webUI的使用"><a href="#4-3-webUI的使用" class="headerlink" title="4.3 webUI的使用"></a>4.3 webUI的使用</h2><hr><ol><li><p><a href="https://github.com/alibaba/canal/wiki/Canal-Admin-Guide" target="_blank" rel="noopener">官方介绍文档</a></p></li><li><p>Server管理截图</p><ul><li><p>新增<br><img src="/img/alibaba/canal/8.png" alt="image" title="我是图片描述"></p></li><li><p>配置Server 操作-&gt;配置</p><ul><li>载入模板，修改模板<br><img src="/img/alibaba/canal/9.png" alt="image" title="我是图片描述"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># tcp, kafka, RocketMQ</span><br><span class="line">canal.serverMode = kafka</span><br><span class="line">##################################################</span><br><span class="line">#########      MQ      #############</span><br><span class="line">##################################################</span><br><span class="line">canal.mq.servers = 127.0.0.1:9092</span><br><span class="line">canal.mq.retries = 0</span><br><span class="line">canal.mq.batchSize = 16384</span><br><span class="line">canal.mq.maxRequestSize = 1048576</span><br><span class="line">canal.mq.lingerMs = 100</span><br><span class="line">canal.mq.bufferMemory = 33554432</span><br><span class="line">canal.mq.canalBatchSize = 50</span><br><span class="line">canal.mq.canalGetTimeout = 100</span><br><span class="line">canal.mq.flatMessage = true</span><br><span class="line">canal.mq.compressionType = none</span><br><span class="line">canal.mq.acks = all</span><br><span class="line">#canal.mq.properties. =</span><br><span class="line">canal.mq.producerGroup = test</span><br><span class="line"># Set this value to &quot;cloud&quot;, if you want open message trace feature in aliyun.</span><br><span class="line">canal.mq.accessChannel = local</span><br></pre></td></tr></table></figure></li></ul></li><li><p>保存，并返回<br><img src="/img/alibaba/canal/10.png" alt="image" title="我是图片描述"></p></li></ul></li></ol><hr><ol start="3"><li><p>Instance管理截图<br><img src="/img/alibaba/canal/12.png" alt="image" title="我是图片描述"></p><ul><li><p>新增、配置Instance<br><img src="/img/alibaba/canal/11.png" alt="image" title="我是图片描述"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># position info</span><br><span class="line">canal.instance.master.address=127.0.0.1:3306</span><br><span class="line"># username/password</span><br><span class="line">canal.instance.dbUsername=root</span><br><span class="line">canal.instance.dbPassword=12345678s</span><br><span class="line"># mq config</span><br><span class="line">canal.mq.topic=mytopic</span><br></pre></td></tr></table></figure></li><li><p>保存并返回<br><img src="/img/alibaba/canal/13.png" alt="image" title="我是图片描述"></p></li></ul></li></ol><h2 id="4-4-测试"><a href="#4-4-测试" class="headerlink" title="4.4 测试"></a>4.4 测试</h2><p><img src="/img/alibaba/canal/14.png" alt="image" title="我是图片描述"></p><hr><h1 id="五、至此单节点canal秘籍已练成！开森"><a href="#五、至此单节点canal秘籍已练成！开森" class="headerlink" title="五、至此单节点canal秘籍已练成！开森"></a>五、至此单节点canal秘籍已练成！开森</h1><blockquote><p>借鉴文章如下（侵删）：<br><a href="https://www.icode9.com/content-4-454188.html" target="_blank" rel="noopener">canal-admin的高可用使用，单机使用，HA使用，阿里的canal的UI界面，管理canal的实例</a><br><a href="https://blog.csdn.net/u013930425/article/details/80507201" target="_blank" rel="noopener">让canal成为SpringBoot组件</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;一、前言：环境准备&quot;&gt;&lt;a href=&quot;#一、前言：环境准备&quot; class=&quot;headerlink&quot; title=&quot;一、前言：环境准备&quot;&gt;&lt;/a&gt;一、前言：环境准备&lt;/h1&gt;&lt;p&gt;   蓝色字体可点击，安装包下载&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux&lt;/li&gt;
&lt;
      
    
    </summary>
    
    
      <category term="java" scheme="http://zhuangyea.github.io/tags/java/"/>
    
      <category term="alibaba" scheme="http://zhuangyea.github.io/tags/alibaba/"/>
    
  </entry>
  
  <entry>
    <title>Python爬虫技术/框架比对</title>
    <link href="http://zhuangyea.github.io/2020/04/15/python/Python%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/%E6%A1%86%E6%9E%B6%E6%AF%94%E5%AF%B9/"/>
    <id>http://zhuangyea.github.io/2020/04/15/python/Python爬虫技术/框架比对/</id>
    <published>2020-04-15T02:00:00.000Z</published>
    <updated>2020-04-15T05:25:37.521Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th>技术</th><th align="center">区别</th><th align="right">描述</th></tr></thead><tbody><tr><td><a href="https://scrapy.org" target="_blank" rel="noopener">Scrapy框架</a></td><td align="center">主流爬虫框架<br>不适合新手<br>扩展性高</td><td align="right">Scrapy框架是一套比较成熟的Python爬虫框架，是使用Python开发的快速、高层次的信息爬取框架，可以高效的爬取web页面并提取出结构化数据</td></tr><tr><td><a href="https://github.com/scrapinghub/portia" target="_blank" rel="noopener">Portia框架</a></td><td align="center">无需编程基础<br>无需开发<br>页面配置</td><td align="right">Portia框架是一款允许没有任何编程基础的用户可视化地爬取网页的爬虫框架</td></tr><tr><td><a href="http://project.crawley-cloud.com" target="_blank" rel="noopener">Crawley框架</a></td><td align="center">无</td><td align="right">Crawley也是Python开发出的爬虫框架，该框架致力于改变人们从互联网中提取数据的方式</td></tr></tbody></table><hr><blockquote><p>借鉴文章如下（侵删）：<br><a href="https://www.zhihu.com/question/60280580" target="_blank" rel="noopener">Python有哪些常见的、好用的爬虫框架？</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;技术&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;区别&lt;/th&gt;
&lt;th align=&quot;right&quot;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;https://scrapy
      
    
    </summary>
    
      <category term="Python" scheme="http://zhuangyea.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="http://zhuangyea.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>SQL函数</title>
    <link href="http://zhuangyea.github.io/2019/09/06/db/SQL%E5%87%BD%E6%95%B0/"/>
    <id>http://zhuangyea.github.io/2019/09/06/db/SQL函数/</id>
    <published>2019-09-06T07:00:00.000Z</published>
    <updated>2019-12-19T09:16:51.957Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>SQL中字符串截取函数(SUBSTRING)</p><ul><li><p>left（name,4）截取左边的4个字符<br>  SELECT LEFT(201809,4) 年<br>  结果：2018</p></li><li><p>right（name,2）截取右边的2个字符<br>  SELECT RIGHT(201809,2) 月份<br>  结果：09</p></li><li><p>SUBSTRING(name,5,3) 截取name这个字段 从第五个字符开始 只截取之后的3个字符<br>  SELECT SUBSTRING(‘成都融资事业部’,5,3)<br>  结果：事业部</p></li><li><p>SUBSTRING(name,3) 截取name这个字段 从第三个字符开始，之后的所有个字符<br>  SELECT SUBSTRING(‘成都融资事业部’,3)<br>  结果：融资事业部</p></li><li><p>SUBSTRING(name, -4) 截取name这个字段的第 4 个字符位置（倒数）开始取，直到结束<br>  SELECT SUBSTRING(‘成都融资事业部’,-4)<br>  结果：资事业部</p></li><li><p>SUBSTRING(name, -4，2) 截取name这个字段的第 4 个字符位置（倒数）开始取，只截取之后的2个字符<br>  SELECT SUBSTRING(‘成都融资事业部’,-4,2)<br>  结果：资事<br>  注意：我们注意到在函数 substring(str,pos, len)中， pos 可以是负值，但 len 不能取负值。</p></li><li><p>substring_index(‘<a href="http://www.baidu.com&#39;" target="_blank" rel="noopener">www.baidu.com&#39;</a>, ‘.’, 2) 截取第二个 ‘.’ 之前的所有字符<br>  SELECT substring_index(‘<a href="http://www.baidu.com&#39;" target="_blank" rel="noopener">www.baidu.com&#39;</a>, ‘.’, 2)<br>  结果：<a href="http://www.baidu" target="_blank" rel="noopener">www.baidu</a></p></li><li><p>substring_index(‘<a href="http://www.baidu.com&#39;" target="_blank" rel="noopener">www.baidu.com&#39;</a>, ‘.’, -2) 截取第二个 ‘.’ （倒数）之后的所有字符<br>  SELECT substring_index(‘<a href="http://www.baidu.com&#39;" target="_blank" rel="noopener">www.baidu.com&#39;</a>, ‘.’, -2)<br>  结果：baidu.com</p></li><li><p>SUBSTR(name, 1, CHAR_LENGTH(name)-3) 截取name字段，取除name字段后三位的所有字符<br>SELECT SUBSTR(‘成都融资事业部’, 1, CHAR_LENGTH(‘成都融资事业部’)-3)</p></li></ul></li></ol><hr><ol start="2"><li>SQL时间函数<ul><li>俩个时间相减后取分钟  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">TIMESTAMPDIFF(MINUTE,entry_time,out_time)  </span><br><span class="line">    out_time减去entry_time相减后得到分钟，如果后者小于前者分钟为负数。</span><br><span class="line">interval可是： </span><br><span class="line"> - SECOND 秒 SECONDS </span><br><span class="line"> - MINUTE 分钟 MINUTES </span><br><span class="line"> - HOUR 时间 HOURS </span><br><span class="line"> - DAY 天 DAYS </span><br><span class="line"> - MONTH 月 MONTHS </span><br><span class="line"> - YEAR 年 YEARS</span><br></pre></td></tr></table></figure></li></ul></li></ol><blockquote><p>转载于：<a href="https://blog.csdn.net/album_gyd/article/details/81365573" target="_blank" rel="noopener">SQL中字符串截取函数(SUBSTRING)</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;&lt;p&gt;SQL中字符串截取函数(SUBSTRING)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;left（name,4）截取左边的4个字符&lt;br&gt;  SELECT LEFT(201809,4) 年&lt;br&gt;  结果：2018&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;right（na
      
    
    </summary>
    
    
      <category term="数据库" scheme="http://zhuangyea.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot整合Redis及工具类编写</title>
    <link href="http://zhuangyea.github.io/2019/08/22/java/SpringBoot%E6%95%B4%E5%90%88Redis%E5%8F%8A%E5%B7%A5%E5%85%B7%E7%B1%BB%E7%BC%96%E5%86%99/"/>
    <id>http://zhuangyea.github.io/2019/08/22/java/SpringBoot整合Redis及工具类编写/</id>
    <published>2019-08-22T09:35:00.000Z</published>
    <updated>2019-08-22T07:29:05.238Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h2><p>SpringBoot框架中已经集成了redis，在1.x.x的版本时默认使用的jedis客户端，现在是2.x.x版本默认使用的lettuce客户端，两种客户端的区别如下：</p><ul><li>Jedis和Lettuce都是Redis Client</li><li>Jedis 是直连模式，在多个线程间共享一个 Jedis 实例时是线程不安全的，</li><li>如果想要在多线程环境下使用 Jedis，需要使用连接池，<br>每个线程都去拿自己的 Jedis 实例，当连接数量增多时，物理连接成本就较高了。</li><li>Lettuce的连接是基于Netty的，连接实例可以在多个线程间共享，<br>所以，一个多线程的应用可以使用同一个连接实例，而不用担心并发线程的数量。<br>当然这个也是可伸缩的设计，一个连接实例不够的情况也可以按需增加连接实例。</li><li>通过异步的方式可以让我们更好的利用系统资源，而不用浪费线程等待网络或磁盘I/O。</li><li>Lettuce 是基于 netty 的，netty 是一个多线程、事件驱动的 I/O 框架，<br>所以 Lettuce 可以帮助我们充分利用异步的优势。</li></ul><hr><h1>二、jedis客户端模式</h1>1. Maven依赖（先在pom中引入redis及其它jar包）<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- spring 1.5之后spring boot 的自带的Jedis的版本就是2.9.0, 低于该版本启动报错 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>redis.clients<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jedis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li><p>yml配置文件中加入redis相关配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">datasource:</span><br><span class="line">  redis:</span><br><span class="line">    host: localhost</span><br><span class="line">    port: 30539</span><br><span class="line">    database: 13</span><br><span class="line">    password:</span><br></pre></td></tr></table></figure></li><li><p>Redis工具类编写 <a href="/download/java/LowRedisUtil.java">点击下载</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.PostConstruct;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * redis工具类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Colin.Ye</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> RedisController</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/1/12</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(getClass());</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 数据源</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> ShardedJedisPool shardedJedisPool;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;datasource.redis.host&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String host;</span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;datasource.redis.port&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> port;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;datasource.redis.database&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> db;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 切换redis库</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jedis</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setDb</span><span class="params">(JedisShardInfo jedis)</span> </span>&#123;</span><br><span class="line">        Class&lt;? extends JedisShardInfo&gt; clz = jedis.getClass();</span><br><span class="line">        Field declaredField = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            declaredField = clz.getDeclaredField(<span class="string">"db"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchFieldException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        declaredField.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            declaredField.set(jedis, db);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostConstruct</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        JedisPoolConfig config = <span class="keyword">new</span> JedisPoolConfig();<span class="comment">// Jedis池配置</span></span><br><span class="line"><span class="comment">//      TODO 从配置文件读取配置</span></span><br><span class="line"><span class="comment">//        config.setMaxTotal(Integer.MAX_VALUE); // 最大连接数, 默认8个</span></span><br><span class="line">        config.setMaxIdle(<span class="number">1000</span> * <span class="number">60</span>);<span class="comment">// 对象最大空闲时间</span></span><br><span class="line">        config.setMaxWaitMillis(<span class="number">1000</span> * <span class="number">20</span>);<span class="comment">// 获取对象时最大等待时间</span></span><br><span class="line">        config.setTestOnBorrow(<span class="keyword">false</span>);</span><br><span class="line"><span class="comment">//      TODO 根据配置文件线程数量循环创建连接</span></span><br><span class="line">        List&lt;JedisShardInfo&gt; jdsInfoList = <span class="keyword">new</span> ArrayList&lt;JedisShardInfo&gt;(<span class="number">1</span>);</span><br><span class="line">        JedisShardInfo infoA = <span class="keyword">new</span> JedisShardInfo(host, port);</span><br><span class="line">        setDb(infoA);</span><br><span class="line">        jdsInfoList.add(infoA);</span><br><span class="line"></span><br><span class="line">        JedisShardInfo infoB = <span class="keyword">new</span> JedisShardInfo(host, port);</span><br><span class="line">        setDb(infoB);</span><br><span class="line">        jdsInfoList.add(infoB);</span><br><span class="line"></span><br><span class="line">        JedisShardInfo infoC = <span class="keyword">new</span> JedisShardInfo(host, port);</span><br><span class="line">        setDb(infoC);</span><br><span class="line">        jdsInfoList.add(infoC);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.shardedJedisPool = <span class="keyword">new</span> ShardedJedisPool(config, jdsInfoList);</span><br><span class="line"><span class="comment">//jedis = shardedJedisPool.getResource();</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取数据库连接</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> conn</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ShardedJedis <span class="title">getConnection</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ShardedJedis jedis = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            jedis = shardedJedisPool.getResource();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> jedis;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 关闭数据库连接</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> conn</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">closeConnection</span><span class="params">(ShardedJedis jedis)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> != jedis) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">//shardedJedisPool.returnResource(jedis);</span></span><br><span class="line">                jedis.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">///**</span></span><br><span class="line"><span class="comment">// * 获取jedis</span></span><br><span class="line"><span class="comment">// * @return</span></span><br><span class="line"><span class="comment">// */</span></span><br><span class="line"><span class="comment">//public ShardedJedis jedis()&#123;</span></span><br><span class="line"><span class="comment">//return this.jedis;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> conn</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">setData</span><span class="params">(String key, String value)</span> </span>&#123;</span><br><span class="line">        ShardedJedis jedis = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            jedis = getConnection();</span><br><span class="line">            jedis.set(key, value);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            System.out.println(e);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            closeConnection(jedis);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">llen</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line">        ShardedJedis jedis = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            jedis = getConnection();</span><br><span class="line">            Long l = jedis.llen(key);</span><br><span class="line">            <span class="keyword">return</span> l;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            closeConnection(jedis);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0L</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> conn</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">rpush</span><span class="params">(String key, String value)</span> </span>&#123;</span><br><span class="line">        ShardedJedis jedis = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            jedis = getConnection();</span><br><span class="line">            jedis.rpush(key, value);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            closeConnection(jedis);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> conn</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">sadd</span><span class="params">(String key, String value)</span> </span>&#123;</span><br><span class="line">        ShardedJedis jedis = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            jedis = getConnection();</span><br><span class="line">            jedis.sadd(key, value);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            closeConnection(jedis);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> conn</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getData</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line">        String value = <span class="keyword">null</span>;</span><br><span class="line">        ShardedJedis jedis = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            jedis = getConnection();</span><br><span class="line">            value = jedis.get(key);</span><br><span class="line">            <span class="keyword">return</span> value;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            closeConnection(jedis);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isMember</span><span class="params">(String key, String member)</span> </span>&#123;</span><br><span class="line">        ShardedJedis jedis = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            jedis = getConnection();</span><br><span class="line">            <span class="keyword">boolean</span> result = jedis.sismember(key, member);</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            closeConnection(jedis);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Set&lt;String&gt; <span class="title">smembers</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line">        ShardedJedis jedis = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            jedis = getConnection();</span><br><span class="line">            Set&lt;String&gt; s = jedis.smembers(key);</span><br><span class="line">            <span class="keyword">return</span> s;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            closeConnection(jedis);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取List集合</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clazz</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@SuppressWarnings</span>(&#123;<span class="string">"unchecked"</span>, <span class="string">"rawtypes"</span>&#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List <span class="title">getListJsonData</span><span class="params">(String key, Class clazz)</span> </span>&#123;</span><br><span class="line">        List&lt;String&gt; userList = <span class="keyword">null</span>;</span><br><span class="line">        List list = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        ShardedJedis jedis = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            jedis = getConnection();</span><br><span class="line">            userList = jedis.lrange(key, <span class="number">0</span>, -<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">for</span> (String str : userList) &#123;</span><br><span class="line">                list.add(JSON.parseObject(str, clazz));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> list;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            closeConnection(jedis);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 使用rpush方式插入List集合</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clazz</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">rpushJsonData</span><span class="params">(String key, Object o)</span> </span>&#123;</span><br><span class="line">        ShardedJedis jedis = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            jedis = getConnection();</span><br><span class="line">            jedis.rpush(key, JSON.toJSONString(o));</span><br><span class="line">            logger.info(o.toString());</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            closeConnection(jedis);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 存储map格式数据（map的key和value必须是String）</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hmset</span><span class="params">(String key, Map&lt;String, String&gt; params)</span> </span>&#123;</span><br><span class="line">        ShardedJedis jedis = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            jedis = getConnection();</span><br><span class="line">            jedis.hmset(key, params);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            closeConnection(jedis);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询map格式数据（map的key和value必须是String）</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> obj 可以为LIST、SET、数组、字符串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回list集合</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Map&lt;String, String&gt;&gt; hmget(String key, Object obj) &#123;</span><br><span class="line">        ShardedJedis jedis = getConnection();</span><br><span class="line">        String[] array = &#123;&#125;;</span><br><span class="line">        String str = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (obj <span class="keyword">instanceof</span> String) &#123;</span><br><span class="line">            str = obj.toString().replace(<span class="string">" "</span>, <span class="string">""</span>);</span><br><span class="line">            array = str.split(<span class="string">","</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (obj <span class="keyword">instanceof</span> List || obj <span class="keyword">instanceof</span> Set) &#123;</span><br><span class="line">            str = obj.toString().replace(<span class="string">" "</span>, <span class="string">""</span>);</span><br><span class="line">            str = str.substring(<span class="number">1</span>, str.length() - <span class="number">1</span>);</span><br><span class="line">            array = str.split(<span class="string">","</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (obj <span class="keyword">instanceof</span> String[]) &#123;</span><br><span class="line">            array = (String[]) obj;</span><br><span class="line">        &#125;</span><br><span class="line">        List&lt;Map&lt;String, String&gt;&gt; list = <span class="keyword">new</span> ArrayList&lt;Map&lt;String, String&gt;&gt;();</span><br><span class="line">        List&lt;String&gt; cities = jedis.hmget(key, array);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">            Map&lt;String, String&gt; map = <span class="keyword">new</span> HashMap&lt;String, String&gt;();</span><br><span class="line">            map.put(array[i], cities.get(i));</span><br><span class="line">            list.add(map);</span><br><span class="line">        &#125;</span><br><span class="line">        closeConnection(jedis);</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询map格式数据（返回所有map）</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回list集合</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map&lt;String, String&gt; <span class="title">hgetAll</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line">        ShardedJedis jedis = getConnection();</span><br><span class="line">        Map&lt;String, String&gt; map = <span class="keyword">new</span> HashMap&lt;String, String&gt;();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            map = jedis.hgetAll(key);</span><br><span class="line">            <span class="keyword">return</span> map;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            closeConnection(jedis);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">setJsonData</span><span class="params">(String key, Object o)</span> </span>&#123;</span><br><span class="line">        ShardedJedis jedis = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            jedis = shardedJedisPool.getResource();</span><br><span class="line">            jedis.set(key, JSON.toJSONString(o));</span><br><span class="line">            logger.info(o.toString());</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            closeConnection(jedis);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@SuppressWarnings</span>(<span class="string">"all"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">getJsonData</span><span class="params">(String key, Class clazz)</span> </span>&#123;</span><br><span class="line">        String value = <span class="keyword">null</span>;</span><br><span class="line">        ShardedJedis jedis = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            jedis = shardedJedisPool.getResource();</span><br><span class="line">            value = jedis.get(key);</span><br><span class="line"><span class="comment">//shardedJedisPool.returnResource(jedis);</span></span><br><span class="line">            <span class="keyword">return</span> JSON.parseObject(value, clazz);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            closeConnection(jedis);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">lpop</span><span class="params">(<span class="keyword">final</span> String key)</span> </span>&#123;</span><br><span class="line">        String value = <span class="keyword">null</span>;</span><br><span class="line">        ShardedJedis jedis = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            jedis = getConnection();</span><br><span class="line">            value = jedis.lpop(key);</span><br><span class="line">            <span class="keyword">return</span> value;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            closeConnection(jedis);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Boolean <span class="title">sismember</span><span class="params">(<span class="keyword">final</span> String key, <span class="keyword">final</span> String member)</span> </span>&#123;</span><br><span class="line">        ShardedJedis jedis = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            jedis = getConnection();</span><br><span class="line">            Boolean value = jedis.sismember(key, member);</span><br><span class="line">            <span class="keyword">return</span> value;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            closeConnection(jedis);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">zadd</span><span class="params">(<span class="keyword">final</span> String key, <span class="keyword">int</span> score, String member)</span> </span>&#123;</span><br><span class="line">        ShardedJedis jedis = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            jedis = getConnection();</span><br><span class="line">            Long l = jedis.zadd(key, score, member);</span><br><span class="line">            <span class="keyword">return</span> l;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            closeConnection(jedis);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0L</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Set&lt;String&gt; <span class="title">zrevrange</span><span class="params">(<span class="keyword">final</span> String key, <span class="keyword">int</span> start, <span class="keyword">int</span> end)</span> </span>&#123;</span><br><span class="line">        ShardedJedis jedis = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            jedis = getConnection();</span><br><span class="line">            Set&lt;String&gt; s = jedis.zrevrange(key, start, end);</span><br><span class="line">            <span class="keyword">return</span> s;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            closeConnection(jedis);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">zrevrangeByscore</span><span class="params">(<span class="keyword">final</span> String key)</span> </span>&#123;</span><br><span class="line">        ShardedJedis jedis = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            jedis = getConnection();</span><br><span class="line">            Set&lt;String&gt; s = jedis.zrevrangeByScore(key, <span class="string">"+inf"</span>, <span class="string">"-inf"</span>);</span><br><span class="line">            Iterator&lt;String&gt; it = s.iterator();</span><br><span class="line">            <span class="keyword">while</span> (it.hasNext()) &#123;</span><br><span class="line">                <span class="keyword">return</span> (String) it.next();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            closeConnection(jedis);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Set&lt;Tuple&gt; <span class="title">zrevrangeWithScores</span><span class="params">(<span class="keyword">final</span> String key, <span class="keyword">int</span> start, <span class="keyword">int</span> end)</span> </span>&#123;</span><br><span class="line">        ShardedJedis jedis = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            jedis = getConnection();</span><br><span class="line">            Set&lt;Tuple&gt; set = jedis.zrevrangeWithScores(key, start, end);</span><br><span class="line">            <span class="keyword">return</span> set;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            closeConnection(jedis);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">zincrby</span><span class="params">(<span class="keyword">final</span> String key, <span class="keyword">int</span> score, String member)</span> </span>&#123;</span><br><span class="line">        ShardedJedis jedis = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            jedis = getConnection();</span><br><span class="line">            Double d = jedis.zincrby(key, score, member);</span><br><span class="line">            <span class="keyword">return</span> d.intValue();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            closeConnection(jedis);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">zscore</span><span class="params">(<span class="keyword">final</span> String key, String member)</span> </span>&#123;</span><br><span class="line">        ShardedJedis jedis = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            jedis = getConnection();</span><br><span class="line">            Double d = jedis.zscore(key, member);</span><br><span class="line">            <span class="keyword">if</span> (d == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> d.intValue();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            closeConnection(jedis);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">del</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line">        ShardedJedis jedis = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            jedis = getConnection();</span><br><span class="line">            <span class="keyword">long</span> count = jedis.del(key);</span><br><span class="line">            <span class="keyword">return</span> count;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            closeConnection(jedis);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置过期时间</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> seconds 秒</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">expire</span><span class="params">(String key, <span class="keyword">int</span> seconds)</span> </span>&#123;</span><br><span class="line">        ShardedJedis jedis = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            jedis = shardedJedisPool.getResource();</span><br><span class="line">            jedis.expire(key, seconds);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            closeConnection(jedis);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置连接池</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 数据源</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setShardedJedisPool</span><span class="params">(ShardedJedisPool shardedJedisPool)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.shardedJedisPool = shardedJedisPool;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取连接池</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 数据源</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ShardedJedisPool <span class="title">getShardedJedisPool</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> shardedJedisPool;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h1>三、lettuce客户端模式</h1>1. Maven依赖（先在pom中引入redis及其它jar包）<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.commons/commons-pool2 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-pool2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li><p>yml配置文件中加入redis相关配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  redis:</span><br><span class="line">    host: localhost # Redis服务器地址</span><br><span class="line">    port: 30539 # Redis服务器连接端口</span><br><span class="line">    database: 13 # Redis数据库索引（默认为0）</span><br><span class="line">    password: # Redis服务器连接密码（默认为空）</span><br><span class="line">    timeout: 10000ms # 连接超时时间（毫秒）</span><br><span class="line">    lettuce:</span><br><span class="line">      pool:</span><br><span class="line">        max-active: 200 # 连接池最大连接数（使用负值表示没有限制）</span><br><span class="line">        max-wait: -1ms # 连接池最大阻塞等待时间（使用负值表示没有限制）</span><br><span class="line">        max-idle: 10 # 连接池中的最大空闲连接</span><br><span class="line">        min-idle: 0 # 连接池中的最小空闲连接</span><br></pre></td></tr></table></figure></li><li><p>Redis配置类编写 <a href="/download/java/RedisConfig.java">点击下载</a><br>SpringBoot自动帮我们在容器中生成了一个RedisTemplate和一个StringRedisTemplate。但是，这个RedisTemplate的泛型是&lt;Object,Object&gt;，写代码不方便，需要写好多类型转换的代码；我们需要一个泛型为&lt;String,Object&gt;形式的RedisTemplate。并且，这个RedisTemplate没有设置数据存在Redis时，key及value的序列化方式。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.JsonAutoDetect;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.PropertyAccessor;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.connection.RedisConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.serializer.StringRedisSerializer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * redis配置类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Colin.Ye</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> RedisConfig</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/8/22</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@SuppressWarnings</span>(<span class="string">"all"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> RedisTemplate&lt;String, Object&gt; <span class="title">redisTemplate</span><span class="params">(RedisConnectionFactory factory)</span> </span>&#123;</span><br><span class="line">        RedisTemplate&lt;String, Object&gt; template = <span class="keyword">new</span> RedisTemplate&lt;String, Object&gt;();</span><br><span class="line">        template.setConnectionFactory(factory);</span><br><span class="line">        Jackson2JsonRedisSerializer jackson2JsonRedisSerializer = <span class="keyword">new</span> Jackson2JsonRedisSerializer(Object.class);</span><br><span class="line">        ObjectMapper om = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        om.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);</span><br><span class="line">        om.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);</span><br><span class="line">        jackson2JsonRedisSerializer.setObjectMapper(om);</span><br><span class="line">        StringRedisSerializer stringRedisSerializer = <span class="keyword">new</span> StringRedisSerializer();</span><br><span class="line">        <span class="comment">// key采用String的序列化方式</span></span><br><span class="line">        template.setKeySerializer(stringRedisSerializer);</span><br><span class="line">        <span class="comment">// hash的key也采用String的序列化方式</span></span><br><span class="line">        template.setHashKeySerializer(stringRedisSerializer);</span><br><span class="line">        <span class="comment">// value序列化方式采用jackson</span></span><br><span class="line">        template.setValueSerializer(jackson2JsonRedisSerializer);</span><br><span class="line">        <span class="comment">// hash的value序列化方式采用jackson</span></span><br><span class="line">        template.setHashValueSerializer(jackson2JsonRedisSerializer);</span><br><span class="line">        template.afterPropertiesSet();</span><br><span class="line">        <span class="keyword">return</span> template;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Redis工具类编写 <a href="/download/java/RedisUtil.java">点击下载</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.CollectionUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Redis工具类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Colin.Ye</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> RedisUtil</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/8/22</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedisTemplate&lt;String, Object&gt; redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// =============================common============================</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 指定缓存失效时间</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key  键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> time 时间(秒)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">expire</span><span class="params">(String key, <span class="keyword">long</span> time)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (time &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                redisTemplate.expire(key, time, TimeUnit.SECONDS);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据key 获取过期时间</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 键 不能为null</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 时间(秒) 返回0代表为永久有效</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getExpire</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.getExpire(key, TimeUnit.SECONDS);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断key是否存在</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true 存在 false不存在</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasKey</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> redisTemplate.hasKey(key);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除缓存</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 可以传一个值 或多个</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">del</span><span class="params">(String... key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (key != <span class="keyword">null</span> &amp;&amp; key.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (key.length == <span class="number">1</span>) &#123;</span><br><span class="line">                redisTemplate.delete(key[<span class="number">0</span>]);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                redisTemplate.delete(CollectionUtils.arrayToList(key));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ============================String=============================</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 普通缓存获取</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">get</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> key == <span class="keyword">null</span> ? <span class="keyword">null</span> : redisTemplate.opsForValue().get(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 普通缓存放入</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true成功 false失败</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">set</span><span class="params">(String key, Object value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            redisTemplate.opsForValue().set(key, value);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 普通缓存放入并设置时间</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> time  时间(秒) time要大于0 如果time小于等于0 将设置无限期</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true成功 false 失败</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">set</span><span class="params">(String key, Object value, <span class="keyword">long</span> time)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (time &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                redisTemplate.opsForValue().set(key, value, time, TimeUnit.SECONDS);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                set(key, value);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 递增</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> delta 要增加几(大于0)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">incr</span><span class="params">(String key, <span class="keyword">long</span> delta)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (delta &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"递增因子必须大于0"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForValue().increment(key, delta);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 递减</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> delta 要减少几(小于0)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">decr</span><span class="params">(String key, <span class="keyword">long</span> delta)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (delta &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"递减因子必须大于0"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForValue().increment(key, -delta);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ================================Map=================================</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * HashGet</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key  键 不能为null</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> item 项 不能为null</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">hget</span><span class="params">(String key, String item)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForHash().get(key, item);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取hashKey对应的所有键值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 对应的多个键值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map&lt;Object, Object&gt; <span class="title">hmget</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForHash().entries(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * HashSet</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> map 对应多个键值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true 成功 false 失败</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hmset</span><span class="params">(String key, Map&lt;String, Object&gt; map)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            redisTemplate.opsForHash().putAll(key, map);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * HashSet 并设置时间</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key  键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> map  对应多个键值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> time 时间(秒)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true成功 false失败</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hmset</span><span class="params">(String key, Map&lt;String, Object&gt; map, <span class="keyword">long</span> time)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            redisTemplate.opsForHash().putAll(key, map);</span><br><span class="line">            <span class="keyword">if</span> (time &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                expire(key, time);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 向一张hash表中放入数据,如果不存在将创建</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> item  项</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true 成功 false失败</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hset</span><span class="params">(String key, String item, Object value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            redisTemplate.opsForHash().put(key, item, value);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 向一张hash表中放入数据,如果不存在将创建</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> item  项</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> time  时间(秒) 注意:如果已存在的hash表有时间,这里将会替换原有的时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true 成功 false失败</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hset</span><span class="params">(String key, String item, Object value, <span class="keyword">long</span> time)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            redisTemplate.opsForHash().put(key, item, value);</span><br><span class="line">            <span class="keyword">if</span> (time &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                expire(key, time);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除hash表中的值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key  键 不能为null</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> item 项 可以使多个 不能为null</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">hdel</span><span class="params">(String key, Object... item)</span> </span>&#123;</span><br><span class="line">        redisTemplate.opsForHash().delete(key, item);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断hash表中是否有该项的值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key  键 不能为null</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> item 项 不能为null</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true 存在 false不存在</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hHasKey</span><span class="params">(String key, String item)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForHash().hasKey(key, item);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * hash递增 如果不存在,就会创建一个 并把新增后的值返回</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key  键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> item 项</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> by   要增加几(大于0)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">hincr</span><span class="params">(String key, String item, <span class="keyword">double</span> by)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForHash().increment(key, item, by);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * hash递减</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key  键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> item 项</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> by   要减少记(小于0)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">hdecr</span><span class="params">(String key, String item, <span class="keyword">double</span> by)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForHash().increment(key, item, -by);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ============================set=============================</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据key获取Set中的所有值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Set&lt;Object&gt; <span class="title">sGet</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> redisTemplate.opsForSet().members(key);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据value从一个set中查询,是否存在</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true 存在 false不存在</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">sHasKey</span><span class="params">(String key, Object value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> redisTemplate.opsForSet().isMember(key, value);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将数据放入set缓存</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key    键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> values 值 可以是多个</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 成功个数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">sSet</span><span class="params">(String key, Object... values)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> redisTemplate.opsForSet().add(key, values);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将set数据放入缓存</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key    键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> time   时间(秒)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> values 值 可以是多个</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 成功个数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">sSetAndTime</span><span class="params">(String key, <span class="keyword">long</span> time, Object... values)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Long count = redisTemplate.opsForSet().add(key, values);</span><br><span class="line">            <span class="keyword">if</span> (time &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                expire(key, time);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> count;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取set缓存的长度</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">sGetSetSize</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> redisTemplate.opsForSet().size(key);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 移除值为value的</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key    键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> values 值 可以是多个</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 移除的个数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">setRemove</span><span class="params">(String key, Object... values)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Long count = redisTemplate.opsForSet().remove(key, values);</span><br><span class="line">            <span class="keyword">return</span> count;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// ===============================list=================================</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取list缓存的内容</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> start 开始</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> end   结束 0 到 -1代表所有值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Object&gt; <span class="title">lGet</span><span class="params">(String key, <span class="keyword">long</span> start, <span class="keyword">long</span> end)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> redisTemplate.opsForList().range(key, start, end);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取list缓存的长度</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">lGetListSize</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> redisTemplate.opsForList().size(key);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过索引 获取list中的值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> index 索引 index&gt;=0时， 0 表头，1 第二个元素，依次类推；index&lt;0时，-1，表尾，-2倒数第二个元素，依次类推</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">lGetIndex</span><span class="params">(String key, <span class="keyword">long</span> index)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> redisTemplate.opsForList().index(key, index);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将list放入缓存</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 值</span></span><br><span class="line"><span class="comment">     *              //     * <span class="doctag">@param</span> time  时间(秒)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">lSet</span><span class="params">(String key, Object value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            redisTemplate.opsForList().rightPush(key, value);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将list放入缓存</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> time  时间(秒)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">lSet</span><span class="params">(String key, Object value, <span class="keyword">long</span> time)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            redisTemplate.opsForList().rightPush(key, value);</span><br><span class="line">            <span class="keyword">if</span> (time &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                expire(key, time);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将list放入缓存</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 值</span></span><br><span class="line"><span class="comment">     *              //     * <span class="doctag">@param</span> time  时间(秒)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">lSet</span><span class="params">(String key, List&lt;Object&gt; value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            redisTemplate.opsForList().rightPushAll(key, value);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将list放入缓存</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> time  时间(秒)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">lSet</span><span class="params">(String key, List&lt;Object&gt; value, <span class="keyword">long</span> time)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            redisTemplate.opsForList().rightPushAll(key, value);</span><br><span class="line">            <span class="keyword">if</span> (time &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                expire(key, time);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据索引修改list中的某条数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> index 索引</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">lUpdateIndex</span><span class="params">(String key, <span class="keyword">long</span> index, Object value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            redisTemplate.opsForList().set(key, index, value);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 移除N个值为value</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> count 移除多少个</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 移除的个数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">lRemove</span><span class="params">(String key, <span class="keyword">long</span> count, Object value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Long remove = redisTemplate.opsForList().remove(key, count, value);</span><br><span class="line">            <span class="keyword">return</span> remove;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><blockquote><p>借鉴文章如下:<br><a href="https://www.cnblogs.com/zeng1994/p/03303c805731afc9aa9c60dbbd32a323.html" target="_blank" rel="noopener">SpringBoot整合Redis及Redis工具类撰写</a><br><a href="https://www.cnblogs.com/taiyonghai/p/9454764.html" target="_blank" rel="noopener">spring boot 集成 redis lettuce</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、简介&quot;&gt;&lt;a href=&quot;#一、简介&quot; class=&quot;headerlink&quot; title=&quot;一、简介&quot;&gt;&lt;/a&gt;一、简介&lt;/h2&gt;&lt;p&gt;SpringBoot框架中已经集成了redis，在1.x.x的版本时默认使用的jedis客户端，现在是2.x.x版本默认使用
      
    
    </summary>
    
    
      <category term="java" scheme="http://zhuangyea.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Springboot-使用RestTemplate方式发HTTP请求及上传文件</title>
    <link href="http://zhuangyea.github.io/2019/08/09/java/Springboot-%E4%BD%BF%E7%94%A8RestTemplate%E6%96%B9%E5%BC%8F%E5%8F%91HTTP%E8%AF%B7%E6%B1%82%E5%8F%8A%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6/"/>
    <id>http://zhuangyea.github.io/2019/08/09/java/Springboot-使用RestTemplate方式发HTTP请求及上传文件/</id>
    <published>2019-08-09T10:35:00.000Z</published>
    <updated>2019-09-09T02:14:27.355Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>RestTemplate是Spring提供的用于访问Rest服务的客户端，RestTemplate提供了多种便捷访问远程Http服务的方法,能够大大提高客户端的编写效率。</p></blockquote><p>我基于RestTemplate编写了一个工具类，方便使用。工具类提供之提供了GET、POST、DELETE请求方法，其他方法自行补充</p><hr><ol><li><p>Application启动类中实例RestTemplate</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Applicatiohexn</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(ElasticApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RestTemplate <span class="title">restTemplate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// new HttpComponentsClientHttpRequestFactory()作用：支持patch请求</span></span><br><span class="line">        RestTemplate restTemplate = <span class="keyword">new</span> RestTemplate(<span class="keyword">new</span> HttpComponentsClientHttpRequestFactory());</span><br><span class="line"><span class="comment">//        restTemplate.getMessageConverters().set(1, new StringHttpMessageConverter(StandardCharsets.UTF_8));</span></span><br><span class="line">        <span class="keyword">return</span> restTemplate;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>RestTemplateUtils工具类 <a href="/download/java/RestTemplateUtils.java">点击下载</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpEntity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpHeaders;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.ResponseEntity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.LinkedMultiValueMap;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.MultiValueMap;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.LinkedHashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * RestTemplate工具类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Colin.Ye</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> RestTemplateUtils</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/31</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RestTemplateUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * POST请求-JSON参数</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> params</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> headers</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function">T <span class="title">httpPostJson</span><span class="params">(String url, Map params, Map headers, Class&lt;T&gt; clazz)</span> </span>&#123;</span><br><span class="line">        HttpHeaders httpHeaders = <span class="keyword">new</span> HttpHeaders();</span><br><span class="line">        <span class="keyword">if</span> (headers != <span class="keyword">null</span>) &#123;</span><br><span class="line">            headers.forEach((o1, o2) -&gt; httpHeaders.add(o1.toString(), o2.toString()));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// json方式传参</span></span><br><span class="line">        <span class="keyword">return</span> restTemplate.postForObject(url, <span class="keyword">new</span> HttpEntity(params, httpHeaders), clazz);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * POST请求-FROM参数</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> params</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> headers</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function">T <span class="title">httpPostForm</span><span class="params">(String url, Map params, Map headers, Class&lt;T&gt; clazz)</span> </span>&#123;</span><br><span class="line">        HttpHeaders httpHeaders = <span class="keyword">new</span> HttpHeaders();</span><br><span class="line">        params = params == <span class="keyword">null</span> ? <span class="keyword">new</span> LinkedHashMap&lt;&gt;() : params;</span><br><span class="line">        <span class="keyword">if</span> (headers != <span class="keyword">null</span>) &#123;</span><br><span class="line">            headers.forEach((o1, o2) -&gt; httpHeaders.add(o1.toString(), o2.toString()));</span><br><span class="line">        &#125;</span><br><span class="line">        MultiValueMap&lt;String, Object&gt; stringObjectLinkedMultiValueMap = <span class="keyword">new</span> LinkedMultiValueMap&lt;&gt;();</span><br><span class="line">        params.forEach((o1, o2) -&gt; stringObjectLinkedMultiValueMap.add(o1.toString(), o2));</span><br><span class="line">        <span class="comment">// 表单方式传参</span></span><br><span class="line">        <span class="comment">// json方式传参</span></span><br><span class="line">        <span class="keyword">return</span> restTemplate.postForObject(url, <span class="keyword">new</span> HttpEntity(stringObjectLinkedMultiValueMap, httpHeaders), clazz);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * GET请求-?号参数</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> params</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> headers</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function">T <span class="title">httpGetTraditional</span><span class="params">(String url, Map params, Map headers, Class&lt;T&gt; clazz)</span> </span>&#123;</span><br><span class="line">        HttpHeaders httpHeaders = <span class="keyword">new</span> HttpHeaders();</span><br><span class="line">        params = params == <span class="keyword">null</span> ? <span class="keyword">new</span> LinkedHashMap&lt;&gt;() : params;</span><br><span class="line">        <span class="keyword">if</span> (headers != <span class="keyword">null</span>) &#123;</span><br><span class="line">            headers.forEach((o1, o2) -&gt; httpHeaders.add(o1.toString(), o2.toString()));</span><br><span class="line">        &#125;</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder(url);</span><br><span class="line">        sb.append(<span class="string">"?"</span>);</span><br><span class="line">        params.forEach((o1, o2) -&gt; sb.append(o1).append(<span class="string">"="</span>).append(o2).append(<span class="string">"&amp;"</span>));</span><br><span class="line">        url = sb.toString().replaceAll(<span class="string">"&amp;$+|\\?$+"</span>, <span class="string">""</span>);</span><br><span class="line">        ResponseEntity&lt;T&gt; exchange = restTemplate.exchange(url, HttpMethod.GET, <span class="keyword">new</span> HttpEntity(<span class="keyword">null</span>, httpHeaders), clazz);</span><br><span class="line">        <span class="keyword">return</span> exchange.getBody();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * GET请求-分隔符参数</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> params</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> headers</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function">T <span class="title">httpGetPlaceholder</span><span class="params">(String url, List params, Map headers, Class&lt;T&gt; clazz)</span> </span>&#123;</span><br><span class="line">        HttpHeaders httpHeaders = <span class="keyword">new</span> HttpHeaders();</span><br><span class="line">        params = params == <span class="keyword">null</span> ? <span class="keyword">new</span> ArrayList&lt;&gt;() : params;</span><br><span class="line">        <span class="keyword">if</span> (headers != <span class="keyword">null</span>) &#123;</span><br><span class="line">            headers.forEach((o1, o2) -&gt; httpHeaders.add(o1.toString(), o2.toString()));</span><br><span class="line">        &#125;</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder(url);</span><br><span class="line">        params.forEach(o2 -&gt; sb.append(<span class="string">"/"</span>).append(o2));</span><br><span class="line">        url = sb.toString().replaceAll(<span class="string">"&amp;$+|\\?$+"</span>, <span class="string">""</span>);</span><br><span class="line">        ResponseEntity&lt;T&gt; exchange = restTemplate.exchange(url, HttpMethod.GET, <span class="keyword">new</span> HttpEntity(<span class="keyword">null</span>, httpHeaders), clazz);</span><br><span class="line">        <span class="keyword">return</span> exchange.getBody();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * DELETE请求-?号参数</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> params</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> headers</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function">T <span class="title">httpDeleteTraditional</span><span class="params">(String url, Map params, Map headers, Class&lt;T&gt; clazz)</span> </span>&#123;</span><br><span class="line">        HttpHeaders httpHeaders = <span class="keyword">new</span> HttpHeaders();</span><br><span class="line">        params = params == <span class="keyword">null</span> ? <span class="keyword">new</span> LinkedHashMap&lt;&gt;() : params;</span><br><span class="line">        <span class="keyword">if</span> (headers != <span class="keyword">null</span>) &#123;</span><br><span class="line">            headers.forEach((o1, o2) -&gt; httpHeaders.add(o1.toString(), o2.toString()));</span><br><span class="line">        &#125;</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder(url);</span><br><span class="line">        sb.append(<span class="string">"?"</span>);</span><br><span class="line">        params.forEach((o1, o2) -&gt; sb.append(o1).append(<span class="string">"="</span>).append(o2).append(<span class="string">"&amp;"</span>));</span><br><span class="line">        url = sb.toString().replaceAll(<span class="string">"&amp;$+|\\?$+"</span>, <span class="string">""</span>);</span><br><span class="line">        ResponseEntity&lt;T&gt; exchange = restTemplate.exchange(url, HttpMethod.DELETE, <span class="keyword">new</span> HttpEntity(<span class="keyword">null</span>, httpHeaders), clazz);</span><br><span class="line">        <span class="keyword">return</span> exchange.getBody();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * DELETE请求-分隔符参数</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> params</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> headers</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function">T <span class="title">httpDeletePlaceholder</span><span class="params">(String url, List params, Map headers, Class&lt;T&gt; clazz)</span> </span>&#123;</span><br><span class="line">        HttpHeaders httpHeaders = <span class="keyword">new</span> HttpHeaders();</span><br><span class="line">        params = params == <span class="keyword">null</span> ? <span class="keyword">new</span> ArrayList&lt;&gt;() : params;</span><br><span class="line">        <span class="keyword">if</span> (headers != <span class="keyword">null</span>) &#123;</span><br><span class="line">            headers.forEach((o1, o2) -&gt; httpHeaders.add(o1.toString(), o2.toString()));</span><br><span class="line">        &#125;</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder(url);</span><br><span class="line">        params.forEach(o2 -&gt; sb.append(<span class="string">"/"</span>).append(o2));</span><br><span class="line">        url = sb.toString().replaceAll(<span class="string">"&amp;$+|\\?$+"</span>, <span class="string">""</span>);</span><br><span class="line">        ResponseEntity&lt;T&gt; exchange = restTemplate.exchange(url, HttpMethod.DELETE, <span class="keyword">new</span> HttpEntity(<span class="keyword">null</span>, httpHeaders), clazz);</span><br><span class="line">        <span class="keyword">return</span> exchange.getBody();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * PATCH请求-JSON参数</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> params</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> headers</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function">T <span class="title">httpPatchJson</span><span class="params">(String url, Map params, Map headers, Class&lt;T&gt; clazz)</span> </span>&#123;</span><br><span class="line">        HttpHeaders httpHeaders = <span class="keyword">new</span> HttpHeaders();</span><br><span class="line">        <span class="keyword">if</span> (headers != <span class="keyword">null</span>) &#123;</span><br><span class="line">            headers.forEach((o1, o2) -&gt; httpHeaders.add(o1.toString(), o2.toString()));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// json方式传参</span></span><br><span class="line">        <span class="keyword">return</span> restTemplate.patchForObject(url, <span class="keyword">new</span> HttpEntity(params, httpHeaders), clazz);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * patch请求-FROM参数</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> params</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> headers</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function">T <span class="title">httpPatchForm</span><span class="params">(String url, Map params, Map headers, Class&lt;T&gt; clazz)</span> </span>&#123;</span><br><span class="line">        HttpHeaders httpHeaders = <span class="keyword">new</span> HttpHeaders();</span><br><span class="line">        params = params == <span class="keyword">null</span> ? <span class="keyword">new</span> LinkedHashMap&lt;&gt;() : params;</span><br><span class="line">        <span class="keyword">if</span> (headers != <span class="keyword">null</span>) &#123;</span><br><span class="line">            headers.forEach((o1, o2) -&gt; httpHeaders.add(o1.toString(), o2.toString()));</span><br><span class="line">        &#125;</span><br><span class="line">        MultiValueMap&lt;String, Object&gt; stringObjectLinkedMultiValueMap = <span class="keyword">new</span> LinkedMultiValueMap&lt;&gt;();</span><br><span class="line">        params.forEach((o1, o2) -&gt; stringObjectLinkedMultiValueMap.add(o1.toString(), o2));</span><br><span class="line">        <span class="comment">// 表单方式传参</span></span><br><span class="line">        <span class="comment">// json方式传参</span></span><br><span class="line">        <span class="keyword">return</span> restTemplate.patchForObject(url, <span class="keyword">new</span> HttpEntity(stringObjectLinkedMultiValueMap, httpHeaders), clazz);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Colin.Ye</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> LowCreateIndexDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/3/13</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/lowClient/v1/"</span>)</span><br><span class="line"><span class="meta">@CrossOrigin</span></span><br><span class="line"><span class="meta">@DefaultProperties</span>(defaultFallback = <span class="string">"defaultFallback"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LowCreateIndexDemo</span> <span class="keyword">extends</span> <span class="title">BaseController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RestTemplateUtils restTemplateUtils;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/index"</span>)</span><br><span class="line">    <span class="meta">@Log</span></span><br><span class="line">    <span class="meta">@HystrixCommand</span>(commandProperties = <span class="meta">@HystrixProperty</span>(name = <span class="string">"execution.isolation.thread.timeoutInMilliseconds"</span>, value = <span class="string">"2000"</span>))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Map&lt;String, Object&gt; params = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="comment">//  上传文件</span></span><br><span class="line">        FileSystemResource resource = <span class="keyword">new</span> FileSystemResource(<span class="keyword">new</span> File(<span class="string">"/Users/yezhuang/Documents/data/oracle命令的副本.txt"</span>));</span><br><span class="line">        params.put(<span class="string">"deviceId"</span>, <span class="string">"123424"</span>);</span><br><span class="line">        params.put(<span class="string">"file"</span>, resource);</span><br><span class="line">        Object o = restTemplateUtils.httpPostFrom(<span class="string">"http://localhost:10005/lowClient/v1/test"</span>, params, <span class="keyword">null</span>, String.class);</span><br><span class="line">        <span class="keyword">return</span> o.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/test"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">remoteUpdteTest</span><span class="params">(String deviceId, @RequestParam MultipartFile file)</span> </span>&#123;</span><br><span class="line">        System.out.println(deviceId);</span><br><span class="line">        System.out.println(file.getName());</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">fallback</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"网络开小差了，请稍后重试···"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">defaultFallback</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"defaultFallback: 网络开小差了，请稍后重试···"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;RestTemplate是Spring提供的用于访问Rest服务的客户端，RestTemplate提供了多种便捷访问远程Http服务的方法,能够大大提高客户端的编写效率。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我基于RestTemplate编写
      
    
    </summary>
    
    
      <category term="java" scheme="http://zhuangyea.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>java 远程执行Shell命令-通过Jsch连接</title>
    <link href="http://zhuangyea.github.io/2019/05/10/java/java%20%E8%BF%9C%E7%A8%8B%E6%89%A7%E8%A1%8CShell%E5%91%BD%E4%BB%A4-%E9%80%9A%E8%BF%87Jsch%E8%BF%9E%E6%8E%A5/"/>
    <id>http://zhuangyea.github.io/2019/05/10/java/java 远程执行Shell命令-通过Jsch连接/</id>
    <published>2019-05-10T13:20:00.000Z</published>
    <updated>2019-06-26T05:50:54.309Z</updated>
    
    <content type="html"><![CDATA[<p>JSch是Java Secure Channel的缩写。JSch是一个SSH2的纯Java实现。它允许你连接到一个SSH服务器，并且可以使用端口转发，X11转发，文件传输等，当然你也可以集成它的功能到你自己的应用程序。</p><p>本文只介绍如何使用JSch实现的SFTP功能。</p><p>SFTP是Secure File Transfer Protocol的缩写，安全文件传送协议。可以为传输文件提供一种安全的加密方法。SFTP 为 SSH的一部份，是一种传输文件到服务器的安全方式。SFTP是使用加密传输认证信息和传输的数据，所以，使用SFTP是非常安全的。但是，由于这种传输方式使用了加密/解密技术，所以传输效率比普通的FTP要低得多，如果您对网络安全性要求更高时，可以使用SFTP代替FTP。（来自百度的解释）</p><p>要使用JSch，需要下载它的jar包，请从官网下载它：<a href="http://www.jcraft.com/jsch/" target="_blank" rel="noopener">http://www.jcraft.com/jsch/</a></p><p>ChannelSftp类是JSch实现SFTP核心类，它包含了所有SFTP的方法，如：<br>put()：      文件上传<br>get()：      文件下载<br>cd()：       进入指定目录<br>ls()：       得到指定目录下的文件列表<br>rename()：   重命名指定文件或目录<br>rm()：       删除指定文件<br>mkdir()：    创建目录<br>rmdir()：    删除目录</p><p>等等（这里省略了方法的参数，put和get都有多个重载方法，具体请看源代码，这里不一一列出。）<br>JSch支持三种文件传输模式：</p><table><tr><th>传输模式名</th><th>描述</th></tr><tr><td>OVERWRITE</td><td>完全覆盖模式，这是JSch的默认文件传输模式，即如果目标文件已经存在，传输的文件将完全覆盖目标文件，产生新的文件。</td></tr><tr><td>RESUME</td><td>恢复模式，如果文件已经传输一部分，这时由于网络或其他任何原因导致文件传输中断，如果下一次传输相同的文件，则会从上一次中断的地方续传。</td></tr><tr><td>APPEND</td><td>追加模式，如果目标文件已存在，传输的文件将在目标文件后追加。</td></tr></table><p>1.引入jar包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.jcraft&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;jsch&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;0.1.54&lt;/version&gt; </span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>2.实际例子</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.bluemoon.executor.core.executor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.bluemoon.executor.core.log.XxlJobLogger;</span><br><span class="line"><span class="keyword">import</span> com.jcraft.jsch.*;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.Charset;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JSchExecutor</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Logger log = LoggerFactory.getLogger(JSchExecutor.class);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String charset = <span class="string">"UTF-8"</span>; <span class="comment">// 设置编码格式</span></span><br><span class="line">    <span class="keyword">private</span> String user; <span class="comment">// 用户名</span></span><br><span class="line">    <span class="keyword">private</span> String passwd; <span class="comment">// 登录密码</span></span><br><span class="line">    <span class="keyword">private</span> String host; <span class="comment">// 主机IP</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> port = <span class="number">22</span>; <span class="comment">//默认端口</span></span><br><span class="line">    <span class="keyword">private</span> JSch jsch;</span><br><span class="line">    <span class="keyword">private</span> Session session;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ChannelSftp sftp;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user 用户名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> passwd 密码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> host 主机IP</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">JSchExecutor</span><span class="params">(String user, String passwd, String host )</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.user = user;</span><br><span class="line">        <span class="keyword">this</span>.passwd = passwd;</span><br><span class="line">        <span class="keyword">this</span>.host = host;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user 用户名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> passwd 密码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> host 主机IP</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">JSchExecutor</span><span class="params">(String user, String passwd, String host , <span class="keyword">int</span> port )</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.user = user;</span><br><span class="line">        <span class="keyword">this</span>.passwd = passwd;</span><br><span class="line">        <span class="keyword">this</span>.host = host;</span><br><span class="line">        <span class="keyword">this</span>.port = port;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 连接到指定的IP</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> JSchException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">connect</span><span class="params">()</span> <span class="keyword">throws</span> JSchException </span>&#123;</span><br><span class="line">        jsch = <span class="keyword">new</span> JSch();</span><br><span class="line">        session = jsch.getSession(user, host, port);</span><br><span class="line">        session.setPassword(passwd);</span><br><span class="line">        java.util.Properties config = <span class="keyword">new</span> java.util.Properties();</span><br><span class="line">        config.put(<span class="string">"StrictHostKeyChecking"</span>, <span class="string">"no"</span>);</span><br><span class="line">        session.setConfig(config);</span><br><span class="line">        session.connect();</span><br><span class="line">        Channel channel = session.openChannel(<span class="string">"sftp"</span>);</span><br><span class="line">        channel.connect();</span><br><span class="line">        sftp = (ChannelSftp) channel;</span><br><span class="line">        log.info(<span class="string">"连接到SFTP成功。host: "</span> + host);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 关闭连接</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">disconnect</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (sftp != <span class="keyword">null</span> &amp;&amp; sftp.isConnected()) &#123;</span><br><span class="line">            sftp.disconnect();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(session != <span class="keyword">null</span> &amp;&amp; session.isConnected())&#123;</span><br><span class="line">            session.disconnect();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行一条命令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">execCmd</span><span class="params">(String command)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        XxlJobLogger.log( <span class="string">"开始执行命令:"</span> + command);</span><br><span class="line">        <span class="keyword">int</span> returnCode  = -<span class="number">1</span>;</span><br><span class="line">        BufferedReader reader = <span class="keyword">null</span>;</span><br><span class="line">        Channel channel = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        channel = session.openChannel(<span class="string">"exec"</span>);</span><br><span class="line">        ((ChannelExec) channel).setCommand(command);</span><br><span class="line">        channel.setInputStream(<span class="keyword">null</span>);</span><br><span class="line">        ((ChannelExec) channel).setErrStream(System.err);</span><br><span class="line">        InputStream in = channel.getInputStream();</span><br><span class="line">        reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(in));<span class="comment">//中文乱码貌似这里不能控制，看连接的服务器的</span></span><br><span class="line"></span><br><span class="line">        channel.connect();</span><br><span class="line">        System.out.println(<span class="string">"The remote command is: "</span> + command);</span><br><span class="line">        String buf ;</span><br><span class="line">        <span class="keyword">while</span> ((buf = reader.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">            XxlJobLogger.log(buf);</span><br><span class="line">        &#125;</span><br><span class="line">        reader.close();</span><br><span class="line">        <span class="comment">// Get the return code only after the channel is closed.</span></span><br><span class="line">        <span class="keyword">if</span> (channel.isClosed()) &#123;</span><br><span class="line">            returnCode = channel.getExitStatus();</span><br><span class="line">        &#125;</span><br><span class="line">        XxlJobLogger.log( <span class="string">"Exit-status:"</span> + returnCode );</span><br><span class="line"></span><br><span class="line">       <span class="comment">/* StringBuffer buf = new StringBuffer( 1024 );</span></span><br><span class="line"><span class="comment">        byte[] tmp = new byte[ 1024 ];</span></span><br><span class="line"><span class="comment">        while ( true ) &#123;</span></span><br><span class="line"><span class="comment">            while ( in.available() &gt; 0 ) &#123;</span></span><br><span class="line"><span class="comment">                int i = in.read( tmp, 0, 1024 );</span></span><br><span class="line"><span class="comment">                if ( i &lt; 0 ) break;</span></span><br><span class="line"><span class="comment">                buf.append( new String( tmp, 0, i ) );</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">            if (  channel.isClosed() ) &#123;</span></span><br><span class="line"><span class="comment">                res = channel.getExitStatus();</span></span><br><span class="line"><span class="comment">                XxlJobLogger.log( "Exit-status:" + res );</span></span><br><span class="line"><span class="comment">                System.out.println( "Exit-status:" + res );</span></span><br><span class="line"><span class="comment">                break;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">            TimeUnit.MILLISECONDS.sleep(100);</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        XxlJobLogger.log( buf.toString() );*/</span></span><br><span class="line"></span><br><span class="line">        channel.disconnect();</span><br><span class="line">        <span class="keyword">return</span> returnCode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行相关的命令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execCmd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in));</span><br><span class="line"></span><br><span class="line">        String command = <span class="string">""</span>;</span><br><span class="line">        BufferedReader reader = <span class="keyword">null</span>;</span><br><span class="line">        Channel channel = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> ((command = br.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                channel = session.openChannel(<span class="string">"exec"</span>);</span><br><span class="line">                ((ChannelExec) channel).setCommand(command);</span><br><span class="line">                channel.setInputStream(<span class="keyword">null</span>);</span><br><span class="line">                ((ChannelExec) channel).setErrStream(System.err);</span><br><span class="line"></span><br><span class="line">                channel.connect();</span><br><span class="line">                InputStream in = channel.getInputStream();</span><br><span class="line">                reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(in,</span><br><span class="line">                        Charset.forName(charset)));</span><br><span class="line">                String buf = <span class="keyword">null</span>;</span><br><span class="line">                <span class="keyword">while</span> ((buf = reader.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    System.out.println(buf);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (JSchException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                reader.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            channel.disconnect();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 上传文件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">uploadFile</span><span class="params">(String local,String remote)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(local);</span><br><span class="line">        <span class="keyword">if</span> (file.isDirectory()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(local + <span class="string">"  is not a file"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        InputStream inputStream = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String rpath = remote.substring(<span class="number">0</span>,remote.lastIndexOf(<span class="string">"/"</span>)+<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (!isDirExist(rpath))&#123;</span><br><span class="line">                createDir(rpath);</span><br><span class="line">            &#125;</span><br><span class="line">            inputStream = <span class="keyword">new</span> FileInputStream(file);</span><br><span class="line">            sftp.setInputStream(inputStream);</span><br><span class="line">            sftp.put(inputStream, remote);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> e;</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(inputStream != <span class="keyword">null</span>)&#123;</span><br><span class="line">                inputStream.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 下载文件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">downloadFile</span><span class="params">(String remote,String local)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        OutputStream outputStream = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            sftp.connect(<span class="number">5000</span>);</span><br><span class="line">            outputStream = <span class="keyword">new</span> FileOutputStream(<span class="keyword">new</span> File(local));</span><br><span class="line">            sftp.get(remote, outputStream);</span><br><span class="line">            outputStream.flush();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> e;</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(outputStream != <span class="keyword">null</span>)&#123;</span><br><span class="line">                outputStream.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 移动到相应的目录下</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pathName 要移动的目录</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">changeDir</span><span class="params">(String pathName)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(pathName == <span class="keyword">null</span> || pathName.trim().equals(<span class="string">""</span>))&#123;</span><br><span class="line">            log.debug(<span class="string">"invalid pathName"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            sftp.cd(pathName.replaceAll(<span class="string">"\\\\"</span>, <span class="string">"/"</span>));</span><br><span class="line">            log.debug(<span class="string">"directory successfully changed,current dir="</span> + sftp.pwd());</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SftpException e) &#123;</span><br><span class="line">            log.error(<span class="string">"failed to change directory"</span>,e);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建一个文件目录，mkdir每次只能创建一个文件目录</span></span><br><span class="line"><span class="comment">     * 或者可以使用命令mkdir -p 来创建多个文件目录</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">createDir</span><span class="params">(String createpath)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (isDirExist(createpath)) &#123;</span><br><span class="line">                sftp.cd(createpath);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            String pathArry[] = createpath.split(<span class="string">"/"</span>);</span><br><span class="line">            StringBuffer filePath = <span class="keyword">new</span> StringBuffer(<span class="string">"/"</span>);</span><br><span class="line">            <span class="keyword">for</span> (String path : pathArry) &#123;</span><br><span class="line">                <span class="keyword">if</span> (path.equals(<span class="string">""</span>)) &#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                filePath.append(path + <span class="string">"/"</span>);</span><br><span class="line">                <span class="keyword">if</span> (isDirExist(filePath.toString())) &#123;</span><br><span class="line">                    sftp.cd(filePath.toString());</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">// 建立目录</span></span><br><span class="line">                    sftp.mkdir(filePath.toString());</span><br><span class="line">                    <span class="comment">// 进入并设置为当前目录</span></span><br><span class="line">                    sftp.cd(filePath.toString());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            sftp.cd(createpath);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SftpException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"创建路径错误："</span> + createpath);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断目录是否存在</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> directory</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isDirExist</span><span class="params">(String directory)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> isDirExistFlag = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            SftpATTRS sftpATTRS = sftp.lstat(directory);</span><br><span class="line">            isDirExistFlag = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">return</span> sftpATTRS.isDir();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception e)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (e.getMessage().toLowerCase().equals(<span class="string">"no such file"</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                isDirExistFlag = <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> isDirExistFlag;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.用法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    JSchExecutor jSchUtil = <span class="keyword">new</span> JSchExecutor( <span class="string">"user"</span>, <span class="string">"password#"</span>,<span class="string">"192.168.243.21"</span>);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        jSchUtil.connect();</span><br><span class="line">        jSchUtil.uploadFile(<span class="string">"C:\\data\\applogs\\bd-job\\jobhandler\\2020-03-07\\employee.py"</span>,<span class="string">"/data/applogs/bd-job-777/jobhandler/2018-09-15/employee.py"</span>);</span><br><span class="line">        <span class="comment">//jSchUtil.execCmd("python /data/bluemoon/kettle/runScript/ods/fact_org_employee.py 'so you is wahek 哈哈哈快递放假塑料袋放进了'");</span></span><br><span class="line">        jSchUtil.execCmd(<span class="string">"python /data/applogs/bd-job/jobhandler/gluesource/employee.py 中文名称"</span>);</span><br><span class="line">        <span class="comment">//jSchUtil.execCmd("cat /data/applogs/bd-job/jobhandler/test");</span></span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">        jSchUtil.disconnect();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.实时返回打印的日志<br>在实际开发中，需要执行一个python文档，里面含有多条的python语句，可能耗时1个小时才能执行完，这种情况需要能够实时的返回日志信息，看看python到底执行到哪一步。</p><p>使用ChannelShell可与服务器保持连接状态，可交互信息</p><p>用法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 实时打印日志信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">shellCmd</span><span class="params">(String command)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    XxlJobLogger.log( <span class="string">"开始执行命令:"</span> + command);</span><br><span class="line">    <span class="keyword">int</span> returnCode  = -<span class="number">1</span>;</span><br><span class="line">    ChannelShell channel=(ChannelShell) session.openChannel(<span class="string">"shell"</span>);</span><br><span class="line">    InputStream in = channel.getInputStream();</span><br><span class="line">    channel.setPty(<span class="keyword">true</span>);</span><br><span class="line">    channel.connect();</span><br><span class="line">    OutputStream os = channel.getOutputStream();</span><br><span class="line">    os.write((command + <span class="string">"\r\n"</span>).getBytes());</span><br><span class="line">    os.write(<span class="string">"exit\r\n"</span>.getBytes());</span><br><span class="line">    os.flush();</span><br><span class="line">    XxlJobLogger.log(<span class="string">"The remote command is:&#123;&#125;"</span> ,command);</span><br><span class="line">    <span class="keyword">byte</span>[] tmp=<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">    <span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line">        <span class="keyword">while</span> (in.available() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> i = in.read(tmp, <span class="number">0</span>, <span class="number">1024</span>);</span><br><span class="line">            <span class="keyword">if</span> (i &lt; <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">            XxlJobLogger.log(<span class="keyword">new</span> String(tmp, <span class="number">0</span>, i));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (channel.isClosed()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (in.available() &gt; <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">            returnCode = channel.getExitStatus();</span><br><span class="line">            XxlJobLogger.log(<span class="string">"exit-status: "</span> + channel.getExitStatus());</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span>&#123;Thread.sleep(<span class="number">1000</span>);&#125;<span class="keyword">catch</span>(Exception ee)&#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    os.close();</span><br><span class="line">    in.close();</span><br><span class="line">    channel.disconnect();</span><br><span class="line">    session.disconnect();</span><br><span class="line">    <span class="keyword">return</span> returnCode;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><blockquote><p>复制原文章（防止原文丢失）(如果涉及侵权，请联系作者进行删除、修改):<br><a href="https://www.jianshu.com/p/ede91b0b8495" target="_blank" rel="noopener">java 远程执行Shell命令-通过Jsch连接</a>;</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;JSch是Java Secure Channel的缩写。JSch是一个SSH2的纯Java实现。它允许你连接到一个SSH服务器，并且可以使用端口转发，X11转发，文件传输等，当然你也可以集成它的功能到你自己的应用程序。&lt;/p&gt;
&lt;p&gt;本文只介绍如何使用JSch实现的SFTP
      
    
    </summary>
    
    
      <category term="java" scheme="http://zhuangyea.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>通过IDEA连接Hive数据库</title>
    <link href="http://zhuangyea.github.io/2019/05/06/idea/%E4%BD%BF%E7%94%A8IDEA%20Database%20Tool%E8%BF%9E%E6%8E%A5Hive%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>http://zhuangyea.github.io/2019/05/06/idea/使用IDEA Database Tool连接Hive数据库/</id>
    <published>2019-05-06T07:00:00.000Z</published>
    <updated>2019-08-22T07:51:30.643Z</updated>
    
    <content type="html"><![CDATA[<p>版本介绍：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Idea: 2018.1</span><br><span class="line">hive: 1.6</span><br></pre></td></tr></table></figure><hr><p>步骤如下：</p><ol><li><p>打开Database<br><img src="/img/source/idea/idea_database_tool.png" alt="image.png"></p></li><li><p>因为IDEA没有内置hive的驱动，所以需要自己新建一个Driver，如下图：</p><p> 2.1 先打开Database工具，选择Database Source Properties<br><img src="/img/source/idea/idea_database_tool1.png" alt="image.png"></p><p> 2.2 选择新建Driver<br><img src="/img/source/idea/idea_database_driver.png" alt="image.png"></p><p> 2.3 选择后自动跳转出现新建Driver配置页面</p><p> 修改Name名字（命名驱动的名字，此处我命名为HIVE2）<br> 点击+，添加hive相关驱动jar包,点击下载【<a href="/template/idea/hive-lib.zip">hive-lib</a>】<br><img src="/img/source/idea/idea_database_tool2.png" alt="image.png"></p><p> 2.4 如果hive版本是最新版本可以根据下图操作<br><img src="/img/source/idea/idea_database_tool5.png" alt="image.png"></p></li></ol><hr><p>效果演示<br><img src="/img/source/idea/idea_database_tool4.png" alt="image.png"></p><blockquote><p>借鉴文章如下(如果涉及侵权，请联系作者进行删除、修改):<br><a href="https://blog.csdn.net/u010814849/article/details/77649724" target="_blank" rel="noopener">使用IDEA Database Tool连接Hive数据库</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;版本介绍：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;b
      
    
    </summary>
    
    
      <category term="idea" scheme="http://zhuangyea.github.io/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>sqoop导入导出Mysql</title>
    <link href="http://zhuangyea.github.io/2019/05/06/hadoop/sqoop%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BAMysql/"/>
    <id>http://zhuangyea.github.io/2019/05/06/hadoop/sqoop导入导出Mysql/</id>
    <published>2019-05-06T07:00:00.000Z</published>
    <updated>2019-05-06T08:17:22.159Z</updated>
    
    <content type="html"><![CDATA[<p>hive命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">show databases;     # 查看某个数据库</span><br><span class="line">use 数据库;            # 进入某个数据库</span><br><span class="line">show tables;        # 展示所有表</span><br><span class="line">desc 表名;            # 显示表结构</span><br><span class="line">show partitions 表名; # 显示表名的分区</span><br><span class="line">show create table_name;   # 显示创建表的结构</span><br><span class="line">truncate table 表名;      #表名;仅删除表中数据，保留表结构</span><br><span class="line">drop table 表名;          #删除表</span><br><span class="line"></span><br><span class="line">// 创建hive表</span><br><span class="line">create table travel_config_spider(</span><br><span class="line">    id      int</span><br><span class="line">   ,pid     int</span><br><span class="line">   ,province    string</span><br><span class="line">   ,city   string</span><br><span class="line">   ,scenic_spot     string</span><br><span class="line">   ,url    string</span><br><span class="line">   ,url_params    string</span><br><span class="line">)</span><br><span class="line">row format delimited</span><br><span class="line">fields terminated by &apos;\t&apos;</span><br><span class="line">;</span><br></pre></td></tr></table></figure><hr><p>用sqoop将mysql的数据导入到hive表中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">sqoop import \</span><br><span class="line">--connect &apos;jdbc:mysql://ip:port/data_acquisition?useUnicode=true&amp;characterEncoding=utf-8&apos; \</span><br><span class="line">--username root \</span><br><span class="line">--password 123456 \</span><br><span class="line">--table  travel_config_spider \</span><br><span class="line">--columns id,pid,province,city,scenic_spot,url,url_params \</span><br><span class="line">--fields-terminated-by &quot;\t&quot; \</span><br><span class="line">--hive-import \</span><br><span class="line">--hive-table colinhive.travel_config_spider \</span><br><span class="line">--target-dir /tmp/colinhive/ \</span><br><span class="line">;</span><br><span class="line"></span><br><span class="line">// 另一种参数</span><br><span class="line">sqoop import \</span><br><span class="line">--connect &apos;jdbc:mysql://ip:port/data_acquisition?useUnicode=true&amp;characterEncoding=utf-8&apos; \</span><br><span class="line">--username root \</span><br><span class="line">--password 123456 \</span><br><span class="line">--query &quot;SELECT id,pid,province,city,scenic_spot,url,url_params from travel_config_spider where 1=1 and \$CONDITIONS&quot; \</span><br><span class="line">--split-by id --columns id,pid,province,city,scenic_spot,url,url_params \</span><br><span class="line">--hive-import \</span><br><span class="line">--fields-terminated-by &quot;\t&quot; \</span><br><span class="line">--hive-table colinhive.travel_config_spider \</span><br><span class="line">--target-dir /tmp/colinhive/ \</span><br><span class="line">;</span><br></pre></td></tr></table></figure><hr><p>用sqoop将hive的数据导入到mysql表中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sqoop export \</span><br><span class="line">--connect &apos;jdbc:mysql://ip:port/data_acquisition?useUnicode=true&amp;characterEncoding=utf-8&apos; \</span><br><span class="line">--username root \</span><br><span class="line">--password 123456 \</span><br><span class="line">--table newtab \</span><br><span class="line">--export-dir /opt/hive/warehouse/colinhive.db/newtab \</span><br><span class="line">--columns id,source_name1,url1,url2,url_params2 \</span><br><span class="line">--input-fields-terminated-by &apos;\t&apos;</span><br><span class="line">;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;hive命令&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;
      
    
    </summary>
    
    
      <category term="sqoop" scheme="http://zhuangyea.github.io/tags/sqoop/"/>
    
      <category term="hive" scheme="http://zhuangyea.github.io/tags/hive/"/>
    
  </entry>
  
  <entry>
    <title>UnitTest单元测试</title>
    <link href="http://zhuangyea.github.io/2019/04/24/java/UnitTest%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/"/>
    <id>http://zhuangyea.github.io/2019/04/24/java/UnitTest单元测试/</id>
    <published>2019-04-24T03:20:00.000Z</published>
    <updated>2020-04-28T11:14:14.570Z</updated>
    
    <content type="html"><![CDATA[<p>unitTestBase类，其他test类集成Base类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"><span class="keyword">import</span> com.isstech.cay.model.result.ResultCode;</span><br><span class="line"><span class="keyword">import</span> com.isstech.cay.utils.AssertUtil;</span><br><span class="line"><span class="keyword">import</span> org.junit.After;</span><br><span class="line"><span class="keyword">import</span> org.junit.Before;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.MediaType;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.web.servlet.MockMvc;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.web.servlet.setup.MockMvcBuilders;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.WebApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.springframework.test.web.servlet.request.MockMvcRequestBuilders.delete;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@RunWith</span>(SpringRunner.class)</span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AnalysisApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> MockMvc mockMvc;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">protected</span> WebApplicationContext wac;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"开始测试-----------------"</span>);</span><br><span class="line">        mockMvc = MockMvcBuilders.webAppContextSetup(wac).build();  <span class="comment">//初始化MockMvc对象</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@After</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"测试结束-----------------"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> entity</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> JSONObject <span class="title">testAdd</span><span class="params">(String url, Object entity)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        String requestJson = JSONObject.toJSONString(entity);</span><br><span class="line">        String responseString = mockMvc.perform(post(url)</span><br><span class="line">                .contentType(MediaType.APPLICATION_JSON).content(requestJson)).andDo(print())</span><br><span class="line">                .andExpect(status().isOk()).andReturn().getResponse().getContentAsString();</span><br><span class="line">        JSONObject jsonObject = JSONObject.parseObject(responseString);</span><br><span class="line">        AssertUtil.isTrue(ResultCode.SUCCESS.code().equals(jsonObject.getInteger(<span class="string">"status"</span>)), <span class="string">"添加失败！"</span>);</span><br><span class="line">        System.out.println(jsonObject.toJSONString());</span><br><span class="line">        <span class="keyword">return</span> jsonObject;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 修改</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> entity</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> JSONObject <span class="title">testUpdate</span><span class="params">(String url, Object entity)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        String requestJson = JSONObject.toJSONString(entity);</span><br><span class="line">        String responseString = mockMvc.perform(post(url)</span><br><span class="line">                .contentType(MediaType.APPLICATION_JSON).content(requestJson)).andDo(print())</span><br><span class="line">                .andExpect(status().isOk()).andReturn().getResponse().getContentAsString();</span><br><span class="line">        JSONObject jsonObject = JSONObject.parseObject(responseString);</span><br><span class="line">        AssertUtil.isTrue(ResultCode.SUCCESS.code().equals(jsonObject.getInteger(<span class="string">"status"</span>)), <span class="string">"修改失败！"</span>);</span><br><span class="line">        System.out.println(jsonObject.toJSONString());</span><br><span class="line">        <span class="keyword">return</span> jsonObject;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url 删除地址</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> JSONObject <span class="title">testDel</span><span class="params">(String url)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        String responseString = mockMvc.perform(delete(url)</span><br><span class="line">                .contentType(MediaType.APPLICATION_JSON)).andDo(print())</span><br><span class="line">                .andExpect(status().isOk()).andReturn().getResponse().getContentAsString();</span><br><span class="line">        JSONObject jsonObject = JSONObject.parseObject(responseString);</span><br><span class="line">        AssertUtil.isTrue(ResultCode.SUCCESS.code().equals(jsonObject.getInteger(<span class="string">"status"</span>)), <span class="string">"删除失败！"</span>);</span><br><span class="line">        System.out.println(jsonObject.toJSONString());</span><br><span class="line">        <span class="keyword">return</span> jsonObject;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> JSONObject <span class="title">testGet</span><span class="params">(String url)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        String responseString = mockMvc.perform(get(url)).andDo(print())</span><br><span class="line">                .andExpect(status().isOk()).andReturn().getResponse().getContentAsString();</span><br><span class="line">        JSONObject jsonObject = JSONObject.parseObject(responseString);</span><br><span class="line">        AssertUtil.isTrue(ResultCode.SUCCESS.code().equals(jsonObject.getInteger(<span class="string">"status"</span>)), <span class="string">"GET查询失败！"</span>);</span><br><span class="line">        <span class="keyword">return</span> jsonObject;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> JSONObject <span class="title">testPost</span><span class="params">(String url, Object entity)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        String requestJson = JSONObject.toJSONString(entity);</span><br><span class="line">        String responseString = mockMvc.perform(post(url)</span><br><span class="line">                .contentType(MediaType.APPLICATION_JSON).content(requestJson)).andDo(print())</span><br><span class="line">                .andExpect(status().isOk()).andReturn().getResponse().getContentAsString();</span><br><span class="line">        JSONObject jsonObject = JSONObject.parseObject(responseString);</span><br><span class="line">        AssertUtil.isTrue(ResultCode.SUCCESS.code().equals(jsonObject.getInteger(<span class="string">"status"</span>)), <span class="string">"POST查询失败！"</span>);</span><br><span class="line">        System.out.println(jsonObject.toJSONString());</span><br><span class="line">        <span class="keyword">return</span> jsonObject;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>api接口测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.isstech.cay.model.BpSysNotice;</span><br><span class="line"><span class="keyword">import</span> com.isstech.cay.model.BpTodo;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 待办事项管理</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Colin.Ye</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> BpSysTodoTests</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/4/13</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BpSysTodoTests</span> <span class="keyword">extends</span> <span class="title">AnalysisApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String REST = <span class="string">"/bp/todo/"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 新增通知</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Rollback</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.testAdd(REST + <span class="string">"add"</span>, <span class="keyword">new</span> BpTodo() &#123;&#123;</span><br><span class="line">            <span class="comment">// setId("5630e9f55cd94e8b878c6f4d672191ad");</span></span><br><span class="line">            setTitle(<span class="string">"测试待办事项"</span>);</span><br><span class="line">            setSysId(<span class="string">"系统ID"</span>);</span><br><span class="line">            setTodoType(<span class="string">"待办事项类型"</span>);</span><br><span class="line">            setSysUrl(<span class="string">"系统URL"</span>);</span><br><span class="line">            setCreatorId(<span class="string">"createId"</span>);</span><br><span class="line">            setUpdateId(<span class="string">"updateId"</span>);</span><br><span class="line">        &#125;&#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 修改通知</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Rollback</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.testUpdate(REST + <span class="string">"update"</span>, <span class="keyword">new</span> BpTodo() &#123;&#123;</span><br><span class="line">            setId(<span class="string">"5630e9f55cd94e8b878c6f4d672191ad"</span>);</span><br><span class="line">            setTitle(<span class="string">"测试待办事项1"</span>);</span><br><span class="line">            setSysId(<span class="string">"系统ID1"</span>);</span><br><span class="line">            setTodoType(<span class="string">"待办事项类型1"</span>);</span><br><span class="line">            setSysUrl(<span class="string">"系统URL1"</span>);</span><br><span class="line">            setCreatorId(<span class="string">"createId1"</span>);</span><br><span class="line">            setUpdateId(<span class="string">"updateId1"</span>);</span><br><span class="line">        &#125;&#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除通知</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Rollback</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">del</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        String id = <span class="string">"5630e9f55cd94e8b878c6f4d672191ad"</span>;</span><br><span class="line">        <span class="keyword">super</span>.testDel(REST + <span class="string">"delete/"</span> + id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据ID查询通知信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">get</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        String id = <span class="string">"5630e9f55cd94e8b878c6f4d672191ad"</span>;</span><br><span class="line">        <span class="keyword">super</span>.testGet(REST + <span class="string">"get/"</span> + id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 条件查询应用</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fetchAppList</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.testPost(REST + <span class="string">"list"</span>, <span class="keyword">new</span> BpTodo() &#123;&#123;</span><br><span class="line">            setTitle(<span class="string">"测试待办事项"</span>);</span><br><span class="line">            setSysId(<span class="string">"系统ID"</span>);</span><br><span class="line">            setTodoType(<span class="string">"待办事项类型"</span>);</span><br><span class="line">            setSysUrl(<span class="string">"系统URL"</span>);</span><br><span class="line">            setCreatorId(<span class="string">"createId"</span>);</span><br><span class="line">            setUpdateId(<span class="string">"updateId"</span>);</span><br><span class="line">        &#125;&#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 条件查询应用-分页</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fetchAppListPage</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.testPost(REST + <span class="string">"list/page"</span>, <span class="keyword">new</span> BpSysNotice() &#123;&#123;</span><br><span class="line">            setCurrentPage(<span class="number">1</span>);</span><br><span class="line">            setPageSize(<span class="number">2</span>);</span><br><span class="line">        &#125;&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;unitTestBase类，其他test类集成Base类&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span c
      
    
    </summary>
    
    
      <category term="java" scheme="http://zhuangyea.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>多数据源切换.md</title>
    <link href="http://zhuangyea.github.io/2019/04/24/java/%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90%E5%88%87%E6%8D%A2/"/>
    <id>http://zhuangyea.github.io/2019/04/24/java/多数据源切换/</id>
    <published>2019-04-24T03:20:00.000Z</published>
    <updated>2019-08-22T07:32:09.305Z</updated>
    
    <content type="html"><![CDATA[<p>初始化、添加、切换数据源</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 初始化默认MYSQL连接</span></span><br><span class="line">MysqlDataSourceUtil.getInstance().initDataSource();</span><br><span class="line"><span class="comment">// 初始化默认HIVE连接</span></span><br><span class="line">HiveDataSourceUtil.getInstance().initDataSource();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化其他MYSQL连接</span></span><br><span class="line">sourceService service = (sourceService) SpringContextUtil.getBean(<span class="string">"sourceService"</span>);</span><br><span class="line">List&lt;AnalysisDataSource&gt; data = service.selectAll();</span><br><span class="line"><span class="keyword">if</span> (data != <span class="keyword">null</span> &amp;&amp; data.size() != <span class="number">0</span>) &#123;</span><br><span class="line">    logger.info(<span class="string">"开始初始化数据源......"</span>);</span><br><span class="line">    <span class="keyword">for</span> (AnalysisDataSource source : data) &#123;</span><br><span class="line">        MysqlDataSourceUtil.getInstance().initOthersDataSource(source);</span><br><span class="line">        logger.info(<span class="string">"初始化数据源:("</span> + source.getId() + <span class="string">")完毕......"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    MysqlDataSourceUtil.getInstance().flushDataSource();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    logger.info(<span class="string">"数据源暂无配置......"</span>);</span><br><span class="line">&#125;</span><br><span class="line">logger.info(<span class="string">"==============springboot启动成功================="</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//切换数据源</span></span><br><span class="line">HiveDataSourceUtil.getInstance().setDataSource(hiveKey);</span><br><span class="line">MysqlDataSourceUtil.getInstance().setDataSource(dbkey);</span><br></pre></td></tr></table></figure><hr><p>以下为实现代码：</p><ol><li><p>HIVE连接池配置(HiveDruidConfig.java)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.isoftstone.ismart.analysis.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.pool.DruidDataSource;</span><br><span class="line"><span class="keyword">import</span> com.isoftstone.ismart.analysis.util.datasoruce.HiveDataSourceUtil;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * HIVE连接池配置</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Colin.Ye</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> HiveDruidConfig</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/4/22</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"hive"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HiveDruidConfig</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(HiveDruidConfig.class);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String url;</span><br><span class="line">    <span class="keyword">private</span> String user;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String driverClassName;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> initialSize;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> minIdle;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> maxActive;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> maxWait;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> timeBetweenEvictionRunsMillis;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> minEvictableIdleTimeMillis;</span><br><span class="line">    <span class="keyword">private</span> String validationQuery;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> testWhileIdle;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> testOnBorrow;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> testOnReturn;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> poolPreparedStatements;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> maxPoolPreparedStatementPerConnectionSize;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"hiveDruidDataSource"</span>)</span><br><span class="line">    <span class="meta">@Qualifier</span>(<span class="string">"hiveDruidDataSource"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSource <span class="title">hiveDruidDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        DruidDataSource datasource = <span class="keyword">new</span> DruidDataSource();</span><br><span class="line">        datasource.setUrl(url);</span><br><span class="line">        datasource.setUsername(user);</span><br><span class="line">        datasource.setPassword(password);</span><br><span class="line">        datasource.setDriverClassName(driverClassName);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// pool configuration</span></span><br><span class="line">        datasource.setInitialSize(initialSize);</span><br><span class="line">        datasource.setMinIdle(minIdle);</span><br><span class="line">        datasource.setMaxActive(maxActive);</span><br><span class="line">        datasource.setMaxWait(maxWait);</span><br><span class="line">        datasource.setTimeBetweenEvictionRunsMillis(timeBetweenEvictionRunsMillis);</span><br><span class="line">        datasource.setMinEvictableIdleTimeMillis(minEvictableIdleTimeMillis);</span><br><span class="line">        datasource.setValidationQuery(validationQuery);</span><br><span class="line">        datasource.setTestWhileIdle(testWhileIdle);</span><br><span class="line">        datasource.setTestOnBorrow(testOnBorrow);</span><br><span class="line">        datasource.setTestOnReturn(testOnReturn);</span><br><span class="line">        datasource.setPoolPreparedStatements(poolPreparedStatements);</span><br><span class="line">        datasource.setMaxPoolPreparedStatementPerConnectionSize(maxPoolPreparedStatementPerConnectionSize);</span><br><span class="line">        logger.debug(<span class="string">"Hive DataSource Inject Successfully..."</span>);</span><br><span class="line">        <span class="keyword">return</span> datasource;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"hiveDynamicDataSource"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSource <span class="title">hiveDynamicDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        HiveDataSourceUtil myDynamicDataSource = HiveDataSourceUtil.getInstance();</span><br><span class="line">        <span class="comment">// 配置多数据源</span></span><br><span class="line">        Map&lt;Object, Object&gt; targetDataSources = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        targetDataSources.put(<span class="string">"master"</span>, hiveDruidDataSource());</span><br><span class="line">        myDynamicDataSource.setTargetDataSources(targetDataSources);</span><br><span class="line">        <span class="comment">//设置默认数据源，在动态添加数据源的时候，就可以不再添加此数据源了</span></span><br><span class="line">        myDynamicDataSource.setDefaultTargetDataSource(hiveDruidDataSource());</span><br><span class="line">        <span class="keyword">return</span> myDynamicDataSource;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 此处省略各个属性的get和set方法</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"hiveDruidTemplate"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> JdbcTemplate <span class="title">hiveDruidTemplate</span><span class="params">(@Qualifier(<span class="string">"hiveDynamicDataSource"</span>)</span> DataSource dataSource) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> JdbcTemplate(dataSource);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>MySql连接池配置(Config.java)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.isoftstone.ismart.analysis.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.pool.DruidDataSource;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceBuilder;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.support.http.StatViewServlet;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.support.http.WebStatFilter;</span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.PageHelper;</span><br><span class="line"><span class="keyword">import</span> com.isoftstone.ismart.analysis.filter.SwitchDBFilter;</span><br><span class="line"><span class="keyword">import</span> com.isoftstone.ismart.analysis.filter.analysisFilter;</span><br><span class="line"><span class="keyword">import</span> com.isoftstone.ismart.analysis.util.datasoruce.MysqlDataSourceUtil;</span><br><span class="line"><span class="keyword">import</span> com.mchange.v2.c3p0.ComboPooledDataSource;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.plugin.Interceptor;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.SqlSessionFactoryBean;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.servlet.FilterRegistrationBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.servlet.ServletRegistrationBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Primary;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.datasource.DataSourceTransactionManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.PlatformTransactionManager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> java.beans.PropertyVetoException;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Config</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Logger logger = org.slf4j.LoggerFactory.getLogger(Config.class);</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Bean</span> 防止数据监控报错，无法查看数据源</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@ConfigurationProperties</span> 会把配置文件的参数自动赋值到dataSource里。</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Primary</span> 用于标识默认使用的 DataSource Bean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span>(destroyMethod = <span class="string">"close"</span>, initMethod = <span class="string">"init"</span>, name = <span class="string">"masterDataSource"</span>)</span><br><span class="line">    <span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"spring.datasource"</span>)</span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSource <span class="title">masterDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        logger.info(<span class="string">"创建masterDataSource"</span>);</span><br><span class="line">        DruidDataSource druidDataSource = DruidDataSourceBuilder.create().build();</span><br><span class="line">        <span class="keyword">return</span> druidDataSource;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"dynamicDataSource"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSource <span class="title">dynamicDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        MysqlDataSourceUtil myDynamicDataSource = MysqlDataSourceUtil.getInstance();</span><br><span class="line">        <span class="comment">// 配置多数据源</span></span><br><span class="line">        Map&lt;Object, Object&gt; targetDataSources = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        targetDataSources.put(<span class="string">"master"</span>, masterDataSource());</span><br><span class="line">        myDynamicDataSource.setTargetDataSources(targetDataSources);</span><br><span class="line">        <span class="comment">//设置默认数据源，在动态添加数据源的时候，就可以不再添加此数据源了</span></span><br><span class="line">        myDynamicDataSource.setDefaultTargetDataSource(masterDataSource());</span><br><span class="line">        <span class="keyword">return</span> myDynamicDataSource;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 配置 SqlSessionFactoryBean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span>(value = <span class="string">"sqlSessionFactoryBean222"</span>)</span><br><span class="line">    <span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"mybatis"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> SqlSessionFactoryBean <span class="title">sqlSessionFactoryBean</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SqlSessionFactoryBean sqlSessionFactoryBean = <span class="keyword">new</span> SqlSessionFactoryBean();</span><br><span class="line">        <span class="comment">// 配置数据源，此处配置为关键配置，如果没有将 dynamicDataSource 作为数据源则不能实现切换</span></span><br><span class="line">        sqlSessionFactoryBean.setDataSource(dynamicDataSource());</span><br><span class="line">        sqlSessionFactoryBean.setPlugins(<span class="keyword">new</span> Interceptor[]&#123;pageHelper()&#125;);</span><br><span class="line">        <span class="keyword">return</span> sqlSessionFactoryBean;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 注入 DataSourceTransactionManager 用于事务管理</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PlatformTransactionManager <span class="title">transactionManager</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DataSourceTransactionManager(dynamicDataSource());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * druid过滤器</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FilterRegistrationBean <span class="title">statFilter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建过滤器</span></span><br><span class="line">        FilterRegistrationBean filterRegistrationBean = <span class="keyword">new</span> FilterRegistrationBean();</span><br><span class="line">        filterRegistrationBean.setFilter(<span class="keyword">new</span> WebStatFilter());</span><br><span class="line">        <span class="comment">//设置过滤器过滤路径</span></span><br><span class="line">        filterRegistrationBean.addUrlPatterns(<span class="string">"/*"</span>);</span><br><span class="line">        <span class="comment">//忽略过滤的形式</span></span><br><span class="line">        filterRegistrationBean.addInitParameter(<span class="string">"exclusions"</span>, <span class="string">"*.js,*.gif,*.png,*.css,*.ico,/druid/*"</span>);</span><br><span class="line">        <span class="keyword">return</span> filterRegistrationBean;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    @Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Interceptor <span class="title">pageHelper</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//分页插件</span></span><br><span class="line">        PageHelper pageHelper = <span class="keyword">new</span> PageHelper();</span><br><span class="line">        Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">        properties.setProperty(<span class="string">"reasonable"</span>, <span class="string">"true"</span>);</span><br><span class="line">        properties.setProperty(<span class="string">"dialect"</span>, <span class="string">"mysql"</span>);</span><br><span class="line">        <span class="comment">//RowBounds参数offset作为PageNum使用 - 默认不使用</span></span><br><span class="line">        properties.setProperty(<span class="string">"offsetAsPageNum"</span>, <span class="string">"true"</span>);</span><br><span class="line">        <span class="comment">//RowBounds是否进行count查询 - 默认不查询</span></span><br><span class="line">        properties.setProperty(<span class="string">"rowBoundsWithCount"</span>, <span class="string">"true"</span>);</span><br><span class="line">        <span class="comment">//当设置为true的时候，如果pagesize设置为0（或RowBounds的limit=0），就不执行分页，返回全部结果</span></span><br><span class="line">        properties.setProperty(<span class="string">"pageSizeZero"</span>, <span class="string">"true"</span>);</span><br><span class="line">        <span class="comment">//分页合理化</span></span><br><span class="line">        properties.setProperty(<span class="string">"reasonable"</span>, <span class="string">"true"</span>);</span><br><span class="line">        <span class="comment">//是否支持接口参数来传递分页参数，默认false</span></span><br><span class="line">        properties.setProperty(<span class="string">"supportMethodsArguments"</span>, <span class="string">"true"</span>);</span><br><span class="line">        properties.setProperty(<span class="string">"returnPageInfo"</span>, <span class="string">"check"</span>);</span><br><span class="line">        properties.setProperty(<span class="string">"params"</span>, <span class="string">"count=countSql"</span>);</span><br><span class="line">        properties.setProperty(<span class="string">"params"</span>, <span class="string">"pageNum=page;pageSize=rows;orderBy=orderBy"</span>);</span><br><span class="line">        pageHelper.setProperties(properties);</span><br><span class="line">        <span class="keyword">return</span> pageHelper;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><ol start="3"><li>AnalysisDataSource.java<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.isoftstone.ismart.analysis.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.pool.DruidDataSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AnalysisDataSource</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String url;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Byte sourcetype;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Date createtime;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Date updatetime;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Byte sourcestatus;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String version;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> DruidDataSource druidDataSource;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 此处省略各个属性的get和set方法</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><ol start="4"><li>多数据源切换工具抽象类(BaseDataSource.java)<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.isoftstone.ismart.analysis.util.datasoruce;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.pool.DruidDataSource;</span><br><span class="line"><span class="keyword">import</span> com.isoftstone.ismart.analysis.entity.AnalysisDataSource;</span><br><span class="line"><span class="keyword">import</span> com.isoftstone.ismart.analysis.util.SpringContextUtil;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 多数据源切换工具抽象类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Colin.Ye</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> BaseDataSource</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/4/23</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseDataSource</span> <span class="keyword">extends</span> <span class="title">AbstractRoutingDataSource</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Logger log = LoggerFactory.getLogger(BaseDataSource.class);</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">final</span> Map&lt;Object, Object&gt; dataSourceMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="comment">// 对当前线程的操作-线程安全的</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ThreadLocal&lt;String&gt; contextHolder = <span class="keyword">new</span> ThreadLocal&lt;String&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> ThreadLocal&lt;String&gt; key = <span class="keyword">new</span> ThreadLocal&lt;String&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调用此方法，切换数据源</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDataSource</span><span class="params">(String dataSource)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (dataSourceMap.containsKey(dataSource)) &#123;</span><br><span class="line">            contextHolder.set(dataSource);</span><br><span class="line">            key.set(dataSource);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"数据源:"</span> + dataSource + <span class="string">"不存在"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取数据源</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> contextHolder.get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 删除数据源</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clearDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        contextHolder.remove();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化默认数据源-抽象类</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">initDataSource</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化默认数据源</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> springBeanId</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">initDataSource</span><span class="params">(String springBeanId)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取masterDataSource</span></span><br><span class="line">        DruidDataSource masterDataSource = (DruidDataSource) SpringContextUtil.getBean(springBeanId);</span><br><span class="line">        addDataSource(<span class="string">"master"</span>, masterDataSource);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 加载数据源-抽象类</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">flushDataSource</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加数据源</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> masterDataSource</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">addDataSource</span><span class="params">(String key, DruidDataSource masterDataSource)</span> </span>&#123;</span><br><span class="line">        dataSourceMap.put(key, masterDataSource);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化其他数据源</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> analysisDataSource</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">initOthersDataSource</span><span class="params">(AnalysisDataSource analysisDataSource)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><ol start="5"><li>HIVE多数据源切换工具类(HiveDataSourceUtil.java)<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.isoftstone.ismart.analysis.util.datasoruce;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.isoftstone.ismart.analysis.entity.AnalysisDataSource;</span><br><span class="line"><span class="keyword">import</span> com.isoftstone.ismart.analysis.util.SpringContextUtil;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * HIVE多数据源切换工具类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Colin.Ye</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> HiveDataSourceUtil</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/4/23</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HiveDataSourceUtil</span> <span class="keyword">extends</span> <span class="title">BaseDataSource</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Logger log = LoggerFactory.getLogger(HiveDataSourceUtil.class);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">HiveDataSourceInstance</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> HiveDataSourceUtil INSTANCE = <span class="keyword">new</span> HiveDataSourceUtil();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> HiveDataSourceUtil <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> HiveDataSourceInstance.INSTANCE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化默认数据源</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取masterDataSource</span></span><br><span class="line">        <span class="keyword">super</span>.initDataSource(<span class="string">"hiveDruidDataSource"</span>);</span><br><span class="line">        <span class="comment">//刷新数据源</span></span><br><span class="line">        flushDataSource();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 加载数据源</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">flushDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取spring管理的dynamicDataSource</span></span><br><span class="line">        HiveDataSourceUtil myDynamicDataSource = (HiveDataSourceUtil) SpringContextUtil.getBean(<span class="string">"hiveDynamicDataSource"</span>);</span><br><span class="line">        <span class="comment">//将数据源设置到 targetDataSources</span></span><br><span class="line">        myDynamicDataSource.setTargetDataSources(dataSourceMap);</span><br><span class="line">        <span class="comment">//将 targetDataSources 中的连接信息放入 resolvedDataSources 管理</span></span><br><span class="line">        myDynamicDataSource.afterPropertiesSet();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化其他数据源</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> analysisDataSource</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initOthersDataSource</span><span class="params">(AnalysisDataSource analysisDataSource)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (analysisDataSource == <span class="keyword">null</span> || StringUtils.isBlank(analysisDataSource.getId())) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// pool configuration</span></span><br><span class="line"><span class="comment">//        datasource.setInitialSize(initialSize);</span></span><br><span class="line"><span class="comment">//        datasource.setMinIdle(minIdle);</span></span><br><span class="line"><span class="comment">//        datasource.setMaxActive(maxActive);</span></span><br><span class="line"><span class="comment">//        datasource.setMaxWait(maxWait);</span></span><br><span class="line"><span class="comment">//        datasource.setTimeBetweenEvictionRunsMillis(timeBetweenEvictionRunsMillis);</span></span><br><span class="line"><span class="comment">//        datasource.setMinEvictableIdleTimeMillis(minEvictableIdleTimeMillis);</span></span><br><span class="line"><span class="comment">//        datasource.setValidationQuery(validationQuery);</span></span><br><span class="line"><span class="comment">//        datasource.setTestWhileIdle(testWhileIdle);</span></span><br><span class="line"><span class="comment">//        datasource.setTestOnBorrow(testOnBorrow);</span></span><br><span class="line"><span class="comment">//        datasource.setTestOnReturn(testOnReturn);</span></span><br><span class="line"><span class="comment">//        datasource.setPoolPreparedStatements(poolPreparedStatements);</span></span><br><span class="line"><span class="comment">//        datasource.setMaxPoolPreparedStatementPerConnectionSize(maxPoolPreparedStatementPerConnectionSize);</span></span><br><span class="line">        <span class="comment">//添加数据源到map</span></span><br><span class="line">        addDataSource(analysisDataSource.getId(), analysisDataSource.getDruidDataSource());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> Object <span class="title">determineCurrentLookupKey</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取当前线程的数据源，如果不存在使用master数据源</span></span><br><span class="line">        String datasource = getDataSource();</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isBlank(datasource)) &#123;</span><br><span class="line">            datasource = <span class="string">"master"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        logger.info(<span class="string">"hive-datasource="</span> + datasource);</span><br><span class="line">        <span class="keyword">return</span> datasource;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><ol start="6"><li>MYSQL多数据源切换工具类(MysqlDataSourceUtil.java)<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.isoftstone.ismart.analysis.util.datasoruce;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.pool.DruidDataSource;</span><br><span class="line"><span class="keyword">import</span> com.isoftstone.ismart.analysis.config.Config;</span><br><span class="line"><span class="keyword">import</span> com.isoftstone.ismart.analysis.entity.AnalysisDataSource;</span><br><span class="line"><span class="keyword">import</span> com.isoftstone.ismart.analysis.util.SpringContextUtil;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * MYSQL多数据源切换工具类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Colin.Ye</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> MysqlDataSourceUtil</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/4/23</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MysqlDataSourceUtil</span> <span class="keyword">extends</span> <span class="title">BaseDataSource</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Logger log = LoggerFactory.getLogger(HiveDataSourceUtil.class);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">MysqlDataSourceInstance</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> MysqlDataSourceUtil INSTANCE = <span class="keyword">new</span> MysqlDataSourceUtil();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> MysqlDataSourceUtil <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> MysqlDataSourceInstance.INSTANCE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化默认数据源</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取masterDataSource</span></span><br><span class="line">        <span class="keyword">super</span>.initDataSource(<span class="string">"masterDataSource"</span>);</span><br><span class="line">        <span class="comment">//刷新数据源</span></span><br><span class="line">        flushDataSource();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 加载数据源</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">flushDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取spring管理的dynamicDataSource</span></span><br><span class="line">        MysqlDataSourceUtil myDynamicDataSource = (MysqlDataSourceUtil) SpringContextUtil.getBean(<span class="string">"dynamicDataSource"</span>);</span><br><span class="line">        <span class="comment">//将数据源设置到 targetDataSources</span></span><br><span class="line">        myDynamicDataSource.setTargetDataSources(dataSourceMap);</span><br><span class="line">        <span class="comment">//将 targetDataSources 中的连接信息放入 resolvedDataSources 管理</span></span><br><span class="line">        myDynamicDataSource.afterPropertiesSet();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化其他数据源</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> analysisDataSource</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initOthersDataSource</span><span class="params">(AnalysisDataSource analysisDataSource)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (analysisDataSource == <span class="keyword">null</span> || StringUtils.isBlank(analysisDataSource.getId())) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        DruidDataSource druidDataSource = <span class="keyword">new</span> DruidDataSource();</span><br><span class="line">        druidDataSource.setUsername(analysisDataSource.getUsername());</span><br><span class="line">        druidDataSource.setPassword(analysisDataSource.getPassword());</span><br><span class="line">        <span class="comment">//在此处可以查询出所有的数据源（例如，配置文件，数据库）然后添加</span></span><br><span class="line">        druidDataSource.setDriverClassName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">        druidDataSource.setUrl(<span class="string">"jdbc:mysql://"</span> + analysisDataSource.getUrl() + <span class="string">"?useUnicode=true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull&amp;allowMultiQueries=true"</span>);</span><br><span class="line">        <span class="comment">//添加数据源到map</span></span><br><span class="line">        addDataSource(analysisDataSource.getId(), druidDataSource);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> Connection <span class="title">getPoolConnection</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Connection connection = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connection = Config.getPool().getConnection();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> connection;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> Object <span class="title">determineCurrentLookupKey</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取当前线程的数据源，如果不存在使用master数据源</span></span><br><span class="line">        String datasource = getDataSource();</span><br><span class="line">        <span class="keyword">if</span> (com.mysql.jdbc.StringUtils.isNullOrEmpty(datasource)) &#123;</span><br><span class="line">            datasource = <span class="string">"master"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        logger.info(<span class="string">"mysql-datasource="</span> + datasource);</span><br><span class="line">        <span class="keyword">return</span> datasource;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>借鉴文章如下<br><a href="https://blog.csdn.net/pengjunlee/article/details/81838480" target="_blank" rel="noopener">SpringBoot重点详解–整合hive-jdbc</a><br><a href="https://blog.csdn.net/u013189824/article/details/80451095" target="_blank" rel="noopener">SpringBoot整合hive-jdbc遇到的坑</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;初始化、添加、切换数据源&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/s
      
    
    </summary>
    
    
      <category term="java" scheme="http://zhuangyea.github.io/tags/java/"/>
    
      <category term="SpringBoot" scheme="http://zhuangyea.github.io/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>Logstash实现mysql同步数据到elasticsearch</title>
    <link href="http://zhuangyea.github.io/2019/03/28/elk/Logstash%E5%AE%9E%E7%8E%B0mysql%E5%90%8C%E6%AD%A5%E6%95%B0%E6%8D%AE%E5%88%B0elasticsearch/"/>
    <id>http://zhuangyea.github.io/2019/03/28/elk/Logstash实现mysql同步数据到elasticsearch/</id>
    <published>2019-03-28T12:00:00.000Z</published>
    <updated>2019-08-22T07:56:07.627Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>Logstash安装：</p><ol><li>下载安装包：<code>wget https://artifacts.elastic.co/downloads/logstash/logstash-6.6.2.tar.gz</code></li><li>下载mysql的连接库jar包(<a href="https://mvnrepository.com/artifact/mysql/mysql-connector-java" target="_blank" rel="noopener">版本库</a>)：<code>wget http://central.maven.org/maven2/mysql/mysql-connector-java/6.0.6/mysql-connector-java-6.0.6.jar</code></li><li>解压安装包：<code>tar -xvf logstash-6.6.2.tar.gz</code></li><li>安装jdbc、elasticsearch插件:<br><img src="/img/source/elk/9386885-52b34b240975bea6.png" alt="image.png"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">logstash插件安装命令</span><br><span class="line">cd logstash-6.6.2/bin</span><br><span class="line">./logstash-plugin install logstash-input-jdbc</span><br><span class="line">./logstash-plugin install logstash-output-elasticsearch</span><br></pre></td></tr></table></figure></li></ol></li><li><p>创建配置文件<br>在config目录下，创建配置文件（logstash-mysql-es.conf）： </p><pre><code>input {# stdin { } jdbc {     jdbc_connection_string =&gt; &quot;jdbc:mysql://localhost:30012/data_acquisition?useUnicode=true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull&amp;allowMultiQueries=true&quot;     jdbc_user =&gt; &quot;root&quot;     jdbc_password =&gt; &quot;123456&quot;     jdbc_driver_library =&gt; &quot;/path/mysql-connector-java-6.0.6.jar&quot; #全路径     jdbc_driver_class =&gt; &quot;com.mysql.jdbc.Driver&quot;     jdbc_paging_enabled =&gt; &quot;true&quot;     jdbc_page_size =&gt; &quot;50000&quot;     statement =&gt; &quot;select * from result_comment where create_time &gt;= &apos;2019-03-20&apos;&quot;     #schedule =&gt; &quot;* * * * *&quot; }}output {  # 这里输出调试，正式运行时可以注释掉  stdout {     codec =&gt; json_lines } elasticsearch {     hosts =&gt; &quot;127.0.0.1:9200&quot;     index =&gt; &quot;wl_travel_analyze&quot;     document_type =&gt; &quot;travel&quot;     document_id =&gt; &quot;%{id}&quot;     #ssl =&gt; true     #ssl_certificate_verification =&gt; true     #truststore =&gt; &quot;/opt/elk/search-guard-tlstool/search-guard-certificates/truststore.jks&quot;     #truststore_password =&gt; &quot;286a7b7a8970af4e8467&quot;     user =&gt; &quot;admin&quot;     password =&gt; &quot;admin&quot; }}</code></pre><h6 id="注意添加ElasticSearch用户名和密码"><a href="#注意添加ElasticSearch用户名和密码" class="headerlink" title="注意添加ElasticSearch用户名和密码"></a>注意添加ElasticSearch用户名和密码</h6></li><li><p>启动改脚本<br><code>nohup ./bin/logstash -f config/logstash-mysql-es.conf &gt; logs/logstash.out &amp;</code></p></li><li><p>查看日志<br><code>tail -f logs/logstash.out</code></p></li></ol><blockquote><p>借鉴文章如下:<br><a href="https://my.oschina.net/xiaowangqiongyou/blog/1812708" target="_blank" rel="noopener">Elasticsearch - Logstash实现mysql同步数据到elasticsearch</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;&lt;p&gt;Logstash安装：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;下载安装包：&lt;code&gt;wget https://artifacts.elastic.co/downloads/logstash/logstash-6.6.2.tar.gz&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
      
    
    </summary>
    
    
      <category term="elk" scheme="http://zhuangyea.github.io/tags/elk/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot2.X连接ElasticSearch集成Search Guard</title>
    <link href="http://zhuangyea.github.io/2019/03/27/elk/SpringBoot2.X%E8%BF%9E%E6%8E%A5ElasticSearch%E9%9B%86%E6%88%90SearchGuard/"/>
    <id>http://zhuangyea.github.io/2019/03/27/elk/SpringBoot2.X连接ElasticSearch集成SearchGuard/</id>
    <published>2019-03-27T12:00:00.000Z</published>
    <updated>2019-08-22T07:43:12.688Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><h5 id="先说需求吧，我的需求：不同项目分配不同用户，用户数据独立；"><a href="#先说需求吧，我的需求：不同项目分配不同用户，用户数据独立；" class="headerlink" title="先说需求吧，我的需求：不同项目分配不同用户，用户数据独立；"></a>先说需求吧，我的需求：不同项目分配不同用户，用户数据独立；</h5><h6 id="但是我在网上找了很多资料都是基于证书实现连接的，疑问如下"><a href="#但是我在网上找了很多资料都是基于证书实现连接的，疑问如下" class="headerlink" title="但是我在网上找了很多资料都是基于证书实现连接的，疑问如下"></a>但是我在网上找了很多资料都是基于证书实现连接的，疑问如下</h6><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.如何生成多个证书？<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.证书如何分配权限？<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.如何使多个证书同时生效？<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.能否基于用户名密码方式连接<br>带着几点疑问开始了编程之旅!!!</p><h6 id="废话不多数直接上代码，官方文档"><a href="#废话不多数直接上代码，官方文档" class="headerlink" title="废话不多数直接上代码，官方文档"></a>废话不多数直接上代码，<a href="https://docs.search-guard.com/latest/online-tls-generator" target="_blank" rel="noopener">官方文档</a></h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">版本介绍：</span><br><span class="line">  JDK：1.8</span><br><span class="line">  SpringBoot：2.0.1</span><br><span class="line">  ElasticSearch：6.6.2</span><br><span class="line">  Search Guard：6.6.2-24.2</span><br><span class="line">需要准备证书（上篇文章中在线生成证书中有这些文件）</span><br><span class="line">  demouser-keystore.jks</span><br><span class="line">  sgadmin-keystore.jks</span><br><span class="line">  truststore.jks</span><br></pre></td></tr></table></figure><p>证书来源参考：<a href="https://www.jianshu.com/p/de341fdb2789" target="_blank" rel="noopener">https://www.jianshu.com/p/de341fdb2789</a></p><h6 id="配置目录结构及配置文件"><a href="#配置目录结构及配置文件" class="headerlink" title="配置目录结构及配置文件"></a>配置目录结构及配置文件</h6><p><img src="/img/source/elk/9386885-86244ac304a16e2a.png" alt="image.png"></p><h6 id="pom-xml文件配置"><a href="#pom-xml文件配置" class="headerlink" title="pom.xml文件配置"></a>pom.xml文件配置</h6><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">spring.boot.version</span>&gt;</span>2.0.1.RELEASE<span class="tag">&lt;/<span class="name">spring.boot.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">elasticsearch.version</span>&gt;</span>6.6.2<span class="tag">&lt;/<span class="name">elasticsearch.version</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.elasticsearch<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>elasticsearch<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;elasticsearch.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.elasticsearch.client<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>transport<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;elasticsearch.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 添加 transport-netty4-client maven 依赖之后可以成功获取到连接  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.elasticsearch.plugin<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>transport-netty4-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;elasticsearch.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.floragunn<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>search-guard-6<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.6.2-24.2-api<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-codec<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-codec<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h6 id="ElasticSearchClient-java"><a href="#ElasticSearchClient-java" class="headerlink" title="ElasticSearchClient.java"></a>ElasticSearchClient.java</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.isoftstone.ismart.elastic.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.floragunn.searchguard.ssl.SearchGuardSSLPlugin;</span><br><span class="line"><span class="keyword">import</span> com.floragunn.searchguard.ssl.util.SSLConfigConstants;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.codec.binary.Base64;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.action.admin.cluster.node.info.NodesInfoRequest;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.transport.TransportClient;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.common.settings.Settings;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.common.transport.TransportAddress;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.transport.client.PreBuiltTransportClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.net.URLDecoder;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Colin.Ye</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> ElasticSearchClient</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/3/25</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ElasticSearchClient</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;spring.data.elasticsearch.cluster-nodes&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String nodes;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;spring.data.elasticsearch.cluster-name&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String custerName;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;spring.data.elasticsearch.ssl-keystore-password&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String sslKeystorePassword;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;spring.data.elasticsearch.ssl-truststore-password&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String sslTruststorePassword;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//注入的ElasticSearch实例</span></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"esClient"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> TransportClient <span class="title">getclient</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ClassLoader classLoader = ElasticSearchClient.class.getClassLoader();</span><br><span class="line">        URL resource = classLoader.getResource(<span class="string">"ca/demouser-keystore.jks"</span>);</span><br><span class="line"><span class="comment">//        URL resource = classLoader.getResource("ca/sgadmin-keystore.jks");</span></span><br><span class="line">        URL truresource = classLoader.getResource(<span class="string">"ca/truststore.jks"</span>);</span><br><span class="line">        String keypath = URLDecoder.decode(resource.getPath(), <span class="string">"UTF-8"</span>);</span><br><span class="line">        String trupath = URLDecoder.decode(truresource.getPath(), <span class="string">"UTF-8"</span>);</span><br><span class="line">        <span class="comment">//windows中路径会多个/ 如/E windows下需要打开注释</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String osName = System.getProperty(<span class="string">"os.name"</span>);</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.contains(osName, <span class="string">"Windows"</span>)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (keypath.startsWith(<span class="string">"/"</span>)) &#123;</span><br><span class="line">                    keypath = keypath.substring(<span class="number">1</span>, keypath.length());</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (trupath.startsWith(<span class="string">"/"</span>)) &#123;</span><br><span class="line">                    trupath = trupath.substring(<span class="number">1</span>, trupath.length());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            System.out.println(e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Settings settings = Settings.builder()</span><br><span class="line">                .put(<span class="string">"cluster.name"</span>, custerName)</span><br><span class="line">                .put(SSLConfigConstants.SEARCHGUARD_SSL_TRANSPORT_ENABLED, <span class="keyword">true</span>)</span><br><span class="line">                .put(SSLConfigConstants.SEARCHGUARD_SSL_TRANSPORT_KEYSTORE_FILEPATH, keypath)</span><br><span class="line">                .put(SSLConfigConstants.SEARCHGUARD_SSL_TRANSPORT_TRUSTSTORE_FILEPATH, trupath)</span><br><span class="line">                .put(SSLConfigConstants.SEARCHGUARD_SSL_TRANSPORT_KEYSTORE_PASSWORD, sslKeystorePassword)</span><br><span class="line">                .put(SSLConfigConstants.SEARCHGUARD_SSL_TRANSPORT_TRUSTSTORE_PASSWORD, sslTruststorePassword)</span><br><span class="line">                .put(SSLConfigConstants.SEARCHGUARD_SSL_HTTP_KEYSTORE_PASSWORD, sslKeystorePassword)</span><br><span class="line">                .put(SSLConfigConstants.SEARCHGUARD_SSL_HTTP_TRUSTSTORE_PASSWORD, sslTruststorePassword)</span><br><span class="line">                .put(<span class="string">"client.transport.ignore_cluster_name"</span>, <span class="keyword">true</span>)</span><br><span class="line">                .put(SSLConfigConstants.SEARCHGUARD_SSL_TRANSPORT_ENFORCE_HOSTNAME_VERIFICATION, <span class="keyword">false</span>)</span><br><span class="line">                .build();</span><br><span class="line">        TransportClient client = <span class="keyword">new</span> PreBuiltTransportClient(settings, SearchGuardSSLPlugin.class);</span><br><span class="line"><span class="comment">//        TransportClient client = new PreBuiltTransportClient(settings);</span></span><br><span class="line"><span class="comment">//        System.out.println("Basic " + new String(Base64.encodeBase64("admin:admin".getBytes())));</span></span><br><span class="line"><span class="comment">//        client.threadPool().getThreadContext().putHeader("Authorization",</span></span><br><span class="line"><span class="comment">//                "Basic " + new String(Base64.encodeBase64("admin:admin".getBytes())));</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String[] nodeArray = nodes.split(<span class="string">","</span>);</span><br><span class="line">            <span class="keyword">for</span> (String node : nodeArray) &#123;</span><br><span class="line">                String[] nodeArr = node.split(<span class="string">":"</span>);</span><br><span class="line">                client.addTransportAddress(<span class="keyword">new</span> TransportAddress(InetAddress.getByName(nodeArr[<span class="number">0</span>]), Integer.parseInt(nodeArr[<span class="number">1</span>])));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//        client.admin().cluster().nodesInfo(new NodesInfoRequest()).actionGet();</span></span><br><span class="line">        <span class="keyword">return</span> client;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="LowCreateIndexDemo-java"><a href="#LowCreateIndexDemo-java" class="headerlink" title="LowCreateIndexDemo.java"></a>LowCreateIndexDemo.java</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.isoftstone.ismart.elastic.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONArray;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"><span class="keyword">import</span> com.isoftstone.ismart.elastic.model.result.Result;</span><br><span class="line"><span class="keyword">import</span> com.isoftstone.ismart.elastic.model.result.ResultCode;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.codec.binary.Base64;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.action.admin.indices.create.CreateIndexRequest;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.action.admin.indices.create.CreateIndexResponse;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.action.index.IndexResponse;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.action.search.SearchResponse;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.transport.TransportClient;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.common.settings.Settings;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.common.xcontent.XContentType;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.index.query.BoolQueryBuilder;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.index.query.QueryBuilders;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.search.SearchHit;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.search.SearchHits;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Colin.Ye</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> LowCreateIndexDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/3/13</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/lowClient/v1/"</span>)</span><br><span class="line"><span class="meta">@CrossOrigin</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LowCreateIndexDemo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">public</span> TransportClient client;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建索引</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> index</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> json</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"createIndex/&#123;index&#125;/&#123;type&#125;"</span>, method = &#123;RequestMethod.POST, RequestMethod.PUT&#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">createIndex</span><span class="params">(HttpServletRequest httpRequest,</span></span></span><br><span class="line"><span class="function"><span class="params">                              @PathVariable String index, @PathVariable String type, @RequestBody String json)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 1、创建 创建索引request</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isBlank(index) || StringUtils.isBlank(type)) &#123;</span><br><span class="line">                <span class="keyword">return</span> Result.failure(ResultCode.PARAM_NOT_INDEX);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isBlank(json)) &#123;</span><br><span class="line">                <span class="keyword">return</span> Result.failure(ResultCode.PARAM_NOT_SETTING);</span><br><span class="line">            &#125;</span><br><span class="line">            CreateIndexRequest request = <span class="keyword">new</span> CreateIndexRequest(index);</span><br><span class="line">            JSONObject reqJson;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                reqJson = JSONObject.parseObject(json);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                <span class="keyword">return</span> Result.failure(ResultCode.PARAM_JSON_ERROR);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             *  2、设置索引的settings</span></span><br><span class="line"><span class="comment">             *  index.number_of_shards：分片数</span></span><br><span class="line"><span class="comment">             *  index.number_of_replicas：副本数</span></span><br><span class="line"><span class="comment">             *  analysis.analyzer.default.tokenizer：默认分词器</span></span><br><span class="line"><span class="comment">             *      ik_max_word：会将文本做最细粒度的拆分</span></span><br><span class="line"><span class="comment">             *      ik_smart：会做最粗粒度的拆分</span></span><br><span class="line"><span class="comment">             *      standard：默认分词器</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            JSONObject settingJson = reqJson.getJSONObject(<span class="string">"settings"</span>);</span><br><span class="line">            Integer shards = <span class="number">3</span>;</span><br><span class="line">            Integer replicas = <span class="number">2</span>;</span><br><span class="line">            String analysis = <span class="string">"standard"</span>;</span><br><span class="line">            <span class="keyword">if</span> (settingJson != <span class="keyword">null</span>) &#123;</span><br><span class="line">                shards = settingJson.getInteger(<span class="string">"shards"</span>);</span><br><span class="line">                replicas = settingJson.getInteger(<span class="string">"replicas"</span>);</span><br><span class="line">                analysis = settingJson.getString(<span class="string">"analysis"</span>) == <span class="keyword">null</span> ? <span class="string">"standard"</span> : settingJson.getString(<span class="string">"analysis"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            request.settings(Settings.builder().put(<span class="string">"index.number_of_shards"</span>, shards)</span><br><span class="line">                    .put(<span class="string">"index.number_of_replicas"</span>, replicas)</span><br><span class="line">                    .put(<span class="string">"analysis.analyzer.default.tokenizer"</span>, analysis)</span><br><span class="line">            );</span><br><span class="line"></span><br><span class="line">            JSONObject array = reqJson.getJSONObject(<span class="string">"mapping"</span>);</span><br><span class="line">            <span class="keyword">if</span> (array != <span class="keyword">null</span> &amp;&amp; array.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                JSONObject jsonObject = <span class="keyword">new</span> JSONObject();</span><br><span class="line">                jsonObject.put(type, <span class="keyword">new</span> JSONObject() &#123;&#123;</span><br><span class="line">                    put(<span class="string">"properties"</span>, <span class="keyword">new</span> JSONObject() &#123;&#123;</span><br><span class="line">                        <span class="keyword">for</span> (Entry&lt;String, Object&gt; obj : array.entrySet()) &#123;</span><br><span class="line">                            put(obj.getKey(), <span class="keyword">new</span> JSONObject() &#123;&#123;</span><br><span class="line">                                put(<span class="string">"type"</span>, obj.getValue().toString());</span><br><span class="line">                            &#125;&#125;);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;&#125;);</span><br><span class="line">                &#125;&#125;);</span><br><span class="line">                System.out.println(jsonObject.toJSONString());</span><br><span class="line">                <span class="comment">// 3、设置索引的mappings</span></span><br><span class="line">                request.mapping(type, jsonObject.toJSONString(), XContentType.JSON);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 4、 设置索引的别名</span></span><br><span class="line"><span class="comment">//            request.alias(new Alias("mmm"));</span></span><br><span class="line">            <span class="comment">// 5、 发送请求 这里和RESTful风格不同</span></span><br><span class="line">            <span class="keyword">boolean</span> b = setAuthHeader(httpRequest);</span><br><span class="line">            <span class="keyword">if</span> (!b) &#123;</span><br><span class="line">                <span class="keyword">return</span> Result.failure(ResultCode.PERMISSION_NO_ACCESS);</span><br><span class="line">            &#125;</span><br><span class="line">            CreateIndexResponse createIndexResponse = client.admin().indices().create(request).get();</span><br><span class="line">            <span class="comment">// 6、处理响应</span></span><br><span class="line">            JSONObject jsonObject = <span class="keyword">new</span> JSONObject();</span><br><span class="line">            jsonObject.put(<span class="string">"acknowledged"</span>, createIndexResponse.isAcknowledged());</span><br><span class="line">            jsonObject.put(<span class="string">"shardsAcknowledged"</span>, createIndexResponse.isAcknowledged());</span><br><span class="line">            <span class="keyword">return</span> Result.success(jsonObject);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> Result.failure(ResultCode.SPECIFIED_QUESTIONED_USER_NOT_EXIST, e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加文档</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> index</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/save/&#123;index&#125;/&#123;type&#125;"</span>, method = RequestMethod.POST)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">save</span><span class="params">(HttpServletRequest httpRequest, @PathVariable String index, @PathVariable String type, @RequestBody String json)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isBlank(index) || StringUtils.isBlank(type)) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.failure(ResultCode.PARAM_NOT_INDEX);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isBlank(json)) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.failure(ResultCode.PARAM_NOT_SETTING);</span><br><span class="line">        &#125;</span><br><span class="line">        JSONObject jsonObject = JSONObject.parseObject(json);</span><br><span class="line">        <span class="keyword">if</span> (jsonObject == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.failure(ResultCode.PARAM_IS_BLANK);</span><br><span class="line">        &#125;</span><br><span class="line">        String id = jsonObject.getString(<span class="string">"id"</span>);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isBlank(id)) &#123;</span><br><span class="line">            id = UUID.randomUUID().toString().replaceAll(<span class="string">"-"</span>, <span class="string">""</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">boolean</span> b = setAuthHeader(httpRequest);</span><br><span class="line">        <span class="keyword">if</span> (!b) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.failure(ResultCode.PERMISSION_NO_ACCESS);</span><br><span class="line">        &#125;</span><br><span class="line">        IndexResponse response = client.prepareIndex(index, type, id).setSource(jsonObject.getInnerMap()).execute().actionGet();</span><br><span class="line">        <span class="keyword">return</span> Result.success(response.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> index</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> json</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/search/&#123;index&#125;/&#123;type&#125;/&#123;page&#125;/&#123;pageSize&#125;"</span>, method = RequestMethod.POST)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">search</span><span class="params">(HttpServletRequest httpRequest,</span></span></span><br><span class="line"><span class="function"><span class="params">                         @PathVariable String index,</span></span></span><br><span class="line"><span class="function"><span class="params">                         @PathVariable String type,</span></span></span><br><span class="line"><span class="function"><span class="params">                         @PathVariable Integer page,</span></span></span><br><span class="line"><span class="function"><span class="params">                         @PathVariable Integer pageSize, @RequestBody String json)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 构造查询对象的工厂类 QueryBuilders,matchQuery全文查询,Operator.AND指定分词项之间采用AND方式连接,默认是OR</span></span><br><span class="line">            BoolQueryBuilder boolQueryBuilder = <span class="keyword">new</span> BoolQueryBuilder();</span><br><span class="line">            <span class="comment">// 3.设置boolQueryBuilder条件</span></span><br><span class="line">            <span class="comment">// 子boolQueryBuilder条件条件，用来表示查询条件or的关系</span></span><br><span class="line"></span><br><span class="line">            JSONObject jsonObject = JSONObject.parseObject(json);</span><br><span class="line">            <span class="keyword">for</span> (Map.Entry&lt;String, Object&gt; entry : jsonObject.entrySet()) &#123;</span><br><span class="line">                boolQueryBuilder.must(QueryBuilders.matchQuery(entry.getKey(), entry.getValue().toString()));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            BoolQueryBuilder childBoolQueryBuilder = <span class="keyword">new</span> BoolQueryBuilder()</span><br><span class="line">                    .should(QueryBuilders.matchPhraseQuery(<span class="string">"comment_content"</span>, <span class="string">"1"</span>))</span><br><span class="line">                    .should(QueryBuilders.matchPhraseQuery(<span class="string">"comment_content"</span>, <span class="string">"2"</span>));</span><br><span class="line">            <span class="comment">// 4.添加查询条件到boolQueryBuilder中</span></span><br><span class="line"><span class="comment">//        boolQueryBuilder</span></span><br><span class="line"><span class="comment">//                .must(childBoolQueryBuilder);</span></span><br><span class="line"><span class="comment">//                .must(QueryBuilders.matchQuery());</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">//构造HighlightBuilder对象,设置需要高亮的字段并自定义高亮标签</span></span><br><span class="line">            HighlightBuilder highlighter = <span class="keyword">new</span> HighlightBuilder()</span><br><span class="line">                    .field(<span class="string">"comment_content"</span>)</span><br><span class="line">                    .preTags(<span class="string">"&lt;span stype=\"color:red\"&gt;"</span>)</span><br><span class="line">                    .postTags(<span class="string">"&lt;/span&gt;"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">boolean</span> b = setAuthHeader(httpRequest);</span><br><span class="line">            <span class="keyword">if</span> (!b) &#123;</span><br><span class="line">                <span class="keyword">return</span> Result.failure(ResultCode.PERMISSION_NO_ACCESS);</span><br><span class="line">            &#125;</span><br><span class="line">            SearchResponse response = client.prepareSearch(index)</span><br><span class="line">                    .setTypes(type)</span><br><span class="line">                    .setQuery(boolQueryBuilder)</span><br><span class="line">                    .highlighter(highlighter)</span><br><span class="line">                    .setSize(pageSize)</span><br><span class="line">                    .setFrom(page)</span><br><span class="line"><span class="comment">//                .addSort("create_time", SortOrder.DESC)</span></span><br><span class="line">                    .get();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//通过上面获得的SearchResponse对象,取得返回结果</span></span><br><span class="line">            SearchHits hits = response.getHits();</span><br><span class="line">            <span class="comment">//搜索到的结果数</span></span><br><span class="line"><span class="comment">//        System.out.println("共搜索到:" + hits.getTotalHits());</span></span><br><span class="line"></span><br><span class="line">            JSONArray array = <span class="keyword">new</span> JSONArray();</span><br><span class="line">            <span class="comment">//遍历SearchHits数组</span></span><br><span class="line">            <span class="keyword">for</span> (SearchHit hit : hits) &#123;</span><br><span class="line">                array.add(JSONObject.parse(hit.getSourceAsString()));</span><br><span class="line"><span class="comment">//            System.out.println("Source:" + hit.getSourceAsString());//返回String类型的文档内容</span></span><br><span class="line"><span class="comment">//            System.out.println("Source As Map:" + hit.getSource());//返回Map格式的文档内容</span></span><br><span class="line"><span class="comment">//            System.out.println("Index:" + hit.getIndex());//返回文档所在的索引</span></span><br><span class="line"><span class="comment">//            System.out.println("Type:" + hit.getType());//返回文档所在的类型</span></span><br><span class="line"><span class="comment">//            System.out.println("ID:" + hit.getId());//返回文档的id</span></span><br><span class="line"><span class="comment">//            System.out.println("Source:" + hit.getSource().get("price"));//从返回的map中通过key取到value</span></span><br><span class="line"><span class="comment">//            System.out.println("Score:" + hit.getScore());//返回文档的评分</span></span><br><span class="line">                <span class="comment">//getHighlightFields()会返回文档中所有高亮字段的内容，再通过get()方法获取某一个字段的高亮片段,最后调用getFragments()方法，返回Text类型的数组</span></span><br><span class="line"><span class="comment">//            Text[] texts = hit.getHighlightFields().get("title").getFragments();</span></span><br><span class="line"><span class="comment">//            if(texts != null) &#123;</span></span><br><span class="line"><span class="comment">//                //遍历高亮结果数组,取出高亮内容</span></span><br><span class="line"><span class="comment">//                for (Text text : texts) &#123;</span></span><br><span class="line"><span class="comment">//                    System.out.println(text.string());</span></span><br><span class="line"><span class="comment">//                &#125;</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> Result.success(array);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            <span class="keyword">return</span> Result.failure(ResultCode.SPECIFIED_QUESTIONED_USER_NOT_EXIST, e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 获取请求消息头中的用户信息，格式【用户名:密码】</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">setAuthHeader</span><span class="params">(HttpServletRequest httpRequest)</span> </span>&#123;</span><br><span class="line">        String authorization = httpRequest.getHeader(<span class="string">"Authorization"</span>);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotBlank(authorization)) &#123;</span><br><span class="line">            client.threadPool().getThreadContext().putHeader(<span class="string">"Authorization"</span>,</span><br><span class="line">                    <span class="string">"Basic "</span> + <span class="keyword">new</span> String(Base64.encodeBase64(authorization.getBytes())));</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h6><ul><li><p>使用colin用户访问colin数据<br><img src="/img/source/elk/9386885-3731c4c4bb0fdcbc.png" alt="image.png"></p></li><li><p>使用colin用户访问其他索引数据<br><img src="/img/source/elk/9386885-76540b4712331d86.png" alt="image.png"></p></li><li><p>使用admin用户访问数据<br><img src="/img/source/elk/9386885-4314e269d4b71d7a.png" alt="image.png"></p></li></ul><h3 id="结语-："><a href="#结语-：" class="headerlink" title="结语 ："></a>结语 ：</h3><h6 id="经过一天时间总算是实现了，但是为什么这样就行，我也不知道！！！"><a href="#经过一天时间总算是实现了，但是为什么这样就行，我也不知道！！！" class="headerlink" title="经过一天时间总算是实现了，但是为什么这样就行，我也不知道！！！"></a>经过一天时间总算是实现了，但是为什么这样就行，我也不知道！！！</h6><ul><li>使用sgadmin-keystore.jks，不需要在请求时添加消息头</li><li>使用demouser-keystore.jks，需要每次请求时添加用户信息消息头</li></ul><blockquote><p>借鉴文章如下:<br><a href="https://www.jianshu.com/p/cc71e7793f6f" target="_blank" rel="noopener">SearchGuard 实践</a><br><a href="https://www.cnblogs.com/leeSmall/p/9218779.html" target="_blank" rel="noopener">elasticsearch系列七：ES Java客户端-Elasticsearch Java client</a><br><a href="https://github.com/liyifan687/Elasticsearch" target="_blank" rel="noopener">Elasticsearch使用searchguard后Java连接及安全验证</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;h5 id=&quot;先说需求吧，我的需求：不同项目分配不同用户，用户数据独立；&quot;&gt;&lt;a href=&quot;#先说需求吧，我的需求：不同项目分配不同用户，用户
      
    
    </summary>
    
    
      <category term="elk" scheme="http://zhuangyea.github.io/tags/elk/"/>
    
  </entry>
  
  <entry>
    <title>ELK之ElasticSearch 6.X安全认证Search Guard(demo01)</title>
    <link href="http://zhuangyea.github.io/2019/03/27/elk/%E5%9F%BA%E4%BA%8ESearchGuard%E5%AF%B9ElasticSearch%E8%BF%9B%E8%A1%8C%E6%9D%83%E9%99%90%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/"/>
    <id>http://zhuangyea.github.io/2019/03/27/elk/基于SearchGuard对ElasticSearch进行权限访问控制/</id>
    <published>2019-03-27T12:00:00.000Z</published>
    <updated>2019-08-22T07:50:32.083Z</updated>
    
    <content type="html"><![CDATA[<p>ElasticSearch单节点安装Search Guard插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">版本介绍：</span><br><span class="line">  ElasticSearch：6.6.2</span><br><span class="line">  Logstash：6.6.2</span><br><span class="line">  Kibana：6.6.2</span><br><span class="line">  Search Guard：6.6.2-24.2</span><br></pre></td></tr></table></figure><hr><ol><li><a href="https://docs.search-guard.com/latest/index" target="_blank" rel="noopener">Search Guard</a>（安全认证）插件安装</li></ol><p>切换到ElasticSearch安装目录，通过使用elasticsearch plugin命令安装Search Guard插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/elasticsearch-plugin install -b com.floragunn:search-guard-6:&lt;version&gt;</span><br></pre></td></tr></table></figure><p><version>参数参考: <a href="https://github.com/floragunncom/search-guard/wiki" target="_blank" rel="noopener">https://github.com/floragunncom/search-guard/wiki</a></version></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">例：./bin/elasticsearch-plugin install -b com.floragunn:search-guard-6:6.6.2-24.2</span><br></pre></td></tr></table></figure><hr><ol start="2"><li>基于在线方式生成TLS证（<a href="https://docs.search-guard.com/latest/online-tls-generator" target="_blank" rel="noopener">官方提供多中方式生成</a>）<br>&nbsp;&nbsp;&nbsp;在线生成地址：<a href="https://search-guard.com/tls-certificate-generator/" target="_blank" rel="noopener">https://search-guard.com/tls-certificate-generator/</a><br><img src="/img/source/elk/9386885-109f806f974debb8.png" alt="image.png"><br>服务器hosts配置<br><img src="/img/source/elk/9386885-12544a6d46288bdf.png" alt="image.png"></li></ol><hr><ol start="3"><li>配置证书<br>证书文件会发送到邮箱中，目录结构如下。详细描述参考证书目录下README.txt<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">search-guard-certificates-&lt;UUID&gt;.tar.gz</span><br><span class="line">│</span><br><span class="line">└─── client-certificates</span><br><span class="line">│        Contains two client certificates named &apos;admin&apos; and &apos;demouser&apos;</span><br><span class="line">│        The &apos;admin&apos; certificate can be used with sgadmin and the REST API.</span><br><span class="line">│        The CN of this certificate is &apos;sgadmin&apos;. The demouser certificate can be used</span><br><span class="line">│        for HTTPS client authentication. The CN of this certificate is &apos;demouser&apos;</span><br><span class="line">└─── node-certificates</span><br><span class="line">│        Contains the certificates in jks, p12 and pem format to be used</span><br><span class="line">│        on your Elasticsearch nodes. You will find certificates for all</span><br><span class="line">│        hostnames you specified when submitting the form.</span><br><span class="line">└─── root-ca</span><br><span class="line">│        Contains the root CA certificate and private key in PEM format.</span><br><span class="line">└─── config</span><br><span class="line">│        Same as above, but for the signing CA</span><br><span class="line">└─── truststore.jks</span><br><span class="line">│        The truststore containing the certificate chain</span><br><span class="line">│        of the root and signing CA, and the root certificate and private key in PEM format.</span><br><span class="line">│        Can be used on all nodes.</span><br><span class="line">└─── root-ca.pem</span><br><span class="line">│        The root CA in PEM format.</span><br><span class="line">│        Can be used on all nodes.</span><br><span class="line">└─── chain-ca.pem</span><br><span class="line">│        The certificate chain containg the root and signing CA in PEM format.</span><br></pre></td></tr></table></figure></li></ol><p>参考<em>README.txt</em> 复制证书及修改ES_HOME/config/elasticsearch.yml配置，配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">  复制证书</span><br><span class="line">      node-certificates：证书目录</span><br><span class="line">      ES_HOME：elasticsearch安装目录</span><br><span class="line">      SG_HOME：ES_HOME/plugins/search-guard-6(插件安装目录)</span><br><span class="line">**/</span><br><span class="line">cp node-certificates/CN=[hostname].crtfull.pem ES_HOME/config/</span><br><span class="line">cp node-certificates/CN=[hostname].key.pem ES_HOME/config/</span><br><span class="line">cp node-certificates/chain-ca.pem ES_HOME/config/</span><br><span class="line">cp node-certificates/truststore.jks SG_HOME/tools/</span><br><span class="line">cp node-certificates/client-certificates/CN=sgadmin-keystore.jks SG_HOME/tools/</span><br><span class="line"></span><br><span class="line">修改es配置文件</span><br><span class="line"></span><br><span class="line">xpack.security.enabled: false</span><br><span class="line">searchguard.ssl.transport.pemcert_filepath: CN=node-01.crtfull.pem</span><br><span class="line">searchguard.ssl.transport.pemkey_filepath: CN=node-01.key.pem</span><br><span class="line">searchguard.ssl.transport.pemkey_password: 密码查看看README.txt</span><br><span class="line">searchguard.ssl.transport.pemtrustedcas_filepath: chain-ca.pem</span><br><span class="line">searchguard.ssl.transport.enforce_hostname_verification: false</span><br><span class="line">searchguard.ssl.http.enabled: false</span><br><span class="line">searchguard.ssl.http.pemcert_filepath: CN=node-01.crtfull.pem</span><br><span class="line">searchguard.ssl.http.pemkey_filepath: CN=node-01.key.pem</span><br><span class="line">searchguard.ssl.http.pemkey_password: 密码查看看README.txt</span><br><span class="line">searchguard.ssl.http.pemtrustedcas_filepath: chain-ca.pem</span><br><span class="line"></span><br><span class="line">searchguard.authcz.admin_dn:</span><br><span class="line">  - CN=sgadmin</span><br><span class="line">#  - CN=demouser</span><br></pre></td></tr></table></figure><p>至此配置告一段落，切换用户启动es,执行以下命令,注意密码查看README.txt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd ES_HOME/plugins/search-guard-&lt;version&gt;/tools</span><br><span class="line">chmod 755 ./sgadmin.sh</span><br><span class="line">./sgadmin.sh -ts truststore.jks -tspass 286a7b7a8970af4e8467 -ks CN=sgadmin-keystore.jks -kspass 449e1fcd3cba8bb7d491 -nhnv -icl -cd ../sgconfig/</span><br></pre></td></tr></table></figure><p>命令输出如下<br><img src="/img/source/elk/9386885-0dd0fa27b66f83d1.png" alt="image.png"></p><hr><ol start="4"><li>见证奇迹时刻！！！<br>打开浏览器输入<a href="http://IP:9200/_searchguard/authinfo，成功弹出登录提示框！输入admin：admin登录成功" target="_blank" rel="noopener">http://IP:9200/_searchguard/authinfo，成功弹出登录提示框！输入admin：admin登录成功</a></li></ol><p><img src="/img/source/elk/9386885-54a8c4a863d0fb42.png" alt="image.png"></p><hr><ol start="5"><li><a href="https://docs.search-guard.com/latest/internal-users-database" target="_blank" rel="noopener">权限配置</a><br>&nbsp;&nbsp;&nbsp;&nbsp;创建一个用户:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;–用户名：colin<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;–密码：colin，<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;–权限：kibana服务权限、只有索引【colin】crud权限，没有logstash权限）<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">内部数据库目录结构（ES_HOME/plugins/search-guard-&lt;version&gt;/sgconfig/）</span><br><span class="line">  --sg_internal_users.yml     用户信息</span><br><span class="line">  --sg_roles.yml              权限设置</span><br><span class="line">  --sg_roles_mapping.yml      映射权限和用户关系</span><br><span class="line"></span><br><span class="line">#创建用户</span><br><span class="line">vim sg_internal_users.yml  #添加用户信息</span><br><span class="line">#password is: colin</span><br><span class="line">colin:</span><br><span class="line">  readonly: true</span><br><span class="line">  hash: $2y$12$8YYO/iYi1k31G5avwHonfOGfv5F/NTIMzPxtziVBg8FIf3q979iiO</span><br><span class="line">  roles:</span><br><span class="line">    - sg_role_colin</span><br><span class="line">    - kibanauser</span><br><span class="line"></span><br><span class="line">#添加权限</span><br><span class="line">vim sg_roles.yml  #添加权限</span><br><span class="line">sg_role_colin:</span><br><span class="line">  cluster:</span><br><span class="line">    - UNLIMITED</span><br><span class="line">  indices:</span><br><span class="line">    &apos;colin&apos;:</span><br><span class="line">      &apos;*&apos;:</span><br><span class="line">        - INDICES_ALL</span><br><span class="line">#      _dls_: &apos;&lt;dls query&gt;&apos;</span><br><span class="line">#      _fls_:</span><br><span class="line">#        - &apos;&lt;field&gt;&apos;</span><br><span class="line">#        - &apos;&lt;field&gt;&apos;</span><br><span class="line"></span><br><span class="line">#使配置立即生效</span><br><span class="line">cd ES_HOME/plugins/search-guard-&lt;version&gt;/tools</span><br><span class="line">./sgadmin.sh -ts truststore.jks -tspass 286a7b7a8970af4e8467 -ks CN=sgadmin-keystore.jks -kspass 449e1fcd3cba8bb7d491 -nhnv -icl -cd ../sgconfig/</span><br></pre></td></tr></table></figure></li></ol><p>权限配置完成通过kibana查看效果，如下</p><ul><li>查询colin索引，结果正常<br><img src="/img/source/elk/9386885-8eada28367c2edea.png" alt="image.png"></li><li>查询wl_travel索引，提示无权操作<br><img src="/img/source/elk/9386885-49552c52b60c7bc9.png" alt="image.png"></li></ul><blockquote><p>下一篇介绍<a href="https://www.jianshu.com/p/6cbdea4e42a0" target="_blank" rel="noopener">SpringBoot2.X连接ElasticSearch</a></p></blockquote><h3 id="结语：有很多地方还没弄明白，稀里糊涂配置完！反正是能用了，对不对就不知道。"><a href="#结语：有很多地方还没弄明白，稀里糊涂配置完！反正是能用了，对不对就不知道。" class="headerlink" title="结语：有很多地方还没弄明白，稀里糊涂配置完！反正是能用了，对不对就不知道。"></a>结语：有很多地方还没弄明白，稀里糊涂配置完！反正是能用了，对不对就不知道。</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;ElasticSearch单节点安装Search Guard插件&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;s
      
    
    </summary>
    
    
      <category term="elk" scheme="http://zhuangyea.github.io/tags/elk/"/>
    
  </entry>
  
  <entry>
    <title>ElasticSearch插件SearchGuard/IK安装</title>
    <link href="http://zhuangyea.github.io/2019/03/25/elk/ElasticSearch%E6%8F%92%E4%BB%B6SearchGuard%E5%8F%8AIK%E5%AE%89%E8%A3%85/"/>
    <id>http://zhuangyea.github.io/2019/03/25/elk/ElasticSearch插件SearchGuard及IK安装/</id>
    <published>2019-03-25T13:20:00.000Z</published>
    <updated>2019-03-26T01:44:43.434Z</updated>
    
    <content type="html"><![CDATA[<p>1.<a href="https://docs.search-guard.com/latest/index" target="_blank" rel="noopener">Search Guard</a>（安全认证）</p><p>切换到elasticsearch目录，通过使用elasticsearch plugin命令安装Search Guard插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/elasticsearch-plugin install -b com.floragunn:search-guard-6:&lt;version&gt;</span><br></pre></td></tr></table></figure><p><version>参数参考: <a href="https://github.com/floragunncom/search-guard/wiki" target="_blank" rel="noopener">https://github.com/floragunncom/search-guard/wiki</a></version></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">例：./bin/elasticsearch-plugin install -b com.floragunn:search-guard-6:6.6.2-24.2</span><br></pre></td></tr></table></figure><hr><ol start="2"><li><a href="https://github.com/medcl/elasticsearch-analysis-ik" target="_blank" rel="noopener">IK分词器</a></li></ol><p>切换到elasticsearch目录，通过使用elasticsearch plugin命令安装IK插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v&lt;version&gt;/elasticsearch-analysis-ik-&lt;version&gt;.zip</span><br></pre></td></tr></table></figure><p><version>参数参考: <a href="https://github.com/medcl/elasticsearch-analysis-ik/releases" target="_blank" rel="noopener">https://github.com/medcl/elasticsearch-analysis-ik/releases</a></version></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">例：./bin/elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v6.6.2/elasticsearch-analysis-ik-6.6.2.zip</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.&lt;a href=&quot;https://docs.search-guard.com/latest/index&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Search Guard&lt;/a&gt;（安全认证）&lt;/p&gt;
&lt;p&gt;切换到elasticsearch目录，通过
      
    
    </summary>
    
    
      <category term="elk" scheme="http://zhuangyea.github.io/tags/elk/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot连接MongoDB(单节点)</title>
    <link href="http://zhuangyea.github.io/2019/03/25/java/SpringBoot%E8%BF%9E%E6%8E%A5MongoDB(%E5%8D%95%E8%8A%82%E7%82%B9)/"/>
    <id>http://zhuangyea.github.io/2019/03/25/java/SpringBoot连接MongoDB(单节点)/</id>
    <published>2019-03-25T13:20:00.000Z</published>
    <updated>2019-11-11T09:52:33.451Z</updated>
    
    <content type="html"><![CDATA[<p>pom.xml（SpringBoot版本1.5.9）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 集成mongodb --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-mongodb<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><p>配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#mongodb配置</span><br><span class="line">spring:</span><br><span class="line">  data:</span><br><span class="line">    mongodb:</span><br><span class="line">      host: ip</span><br><span class="line">      port: port</span><br><span class="line">      database: ismart</span><br></pre></td></tr></table></figure><hr><p>实体类参考</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.colin.fdfs.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.data.annotation.Id;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.mongodb.core.mapping.Document;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by colin on 2018/7/4.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Document</span>(collection = <span class="string">"ismartFastdfs"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Fastdfs</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String COLLECTION_KEY = <span class="string">"ismartFastdfs"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String CREATE_TIME = <span class="string">"createTime"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String SYSTEM_ID = <span class="string">"systemId"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="keyword">private</span> String fileName;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> fileSize;</span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line">    <span class="keyword">private</span> String ipHost;</span><br><span class="line">    <span class="keyword">private</span> String filePath;</span><br><span class="line">    <span class="keyword">private</span> String uploadType;</span><br><span class="line">    <span class="keyword">private</span> String systemId;</span><br><span class="line">    <span class="keyword">private</span> String httpUrl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String createTimeStr;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String stime;</span><br><span class="line">    <span class="keyword">private</span> String etime;</span><br><span class="line">    <span class="comment">// TODO 此处省略get/set方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>分页查询</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> MongoTemplate mongoTemplate;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Criteria c = <span class="keyword">new</span> Criteria();</span><br><span class="line">    <span class="keyword">if</span> (params != <span class="keyword">null</span> &amp;&amp; params.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;String, Object&gt; entry : params.entrySet()) &#123;</span><br><span class="line">            c.and(entry.getKey()).is(entry.getValue());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * (num-1) * pageSize</span></span><br><span class="line"><span class="comment">     * 1 10 0 10</span></span><br><span class="line"><span class="comment">     * 2 10 10 10</span></span><br><span class="line"><span class="comment">     * 3 10 20 10</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">if</span> (pageNum == <span class="keyword">null</span>) &#123;</span><br><span class="line">        pageNum = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (pageSize == <span class="keyword">null</span>) &#123;</span><br><span class="line">        pageSize = <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    List&lt;ReadingHistory&gt; data = mongoTemplate.find(Query.query(c)</span><br><span class="line">                    .with(<span class="keyword">new</span> Sort(Sort.Direction.DESC, <span class="string">"mdbCreatedAt"</span>)) <span class="comment">// 排序</span></span><br><span class="line">                    .skip((pageNum - <span class="number">1</span>) * pageSize) <span class="comment">//当前页</span></span><br><span class="line">                    .limit(pageSize), <span class="comment">// 每页条数</span></span><br><span class="line">            ReadingHistory.class, <span class="string">"collectionHistory"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>聚合查询-根据时间分组、排序</p><p>&nbsp;&nbsp;&nbsp;&nbsp;数据结构如下图</p><p><img src="/img/source/java/mongoDB01.png" alt="image.png" title="我是图片描述"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">count</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 根据部门和时间统计上传图片数量，时间倒序</span></span><br><span class="line">        Aggregation agg = Aggregation.newAggregation(</span><br><span class="line"><span class="comment">//                Aggregation.match(Criteria.where("moduleId").is("ismart")),</span></span><br><span class="line">                Aggregation.project(<span class="string">"moduleId"</span>)</span><br><span class="line">                        .and(DateOperators.DateToString.dateOf(<span class="string">"createTime"</span>)</span><br><span class="line">                                .toString(<span class="string">"%Y-%m-%d"</span>)).as(<span class="string">"date"</span>),</span><br><span class="line">                Aggregation.group(<span class="string">"date"</span>,<span class="string">"moduleId"</span>).count().as(<span class="string">"total"</span>),</span><br><span class="line">                Aggregation.sort(Sort.Direction.DESC, <span class="string">"date"</span>,<span class="string">"moduleId"</span>)</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出数据</span></span><br><span class="line">        AggregationResults&lt;JSONObject&gt; a = mongoTemplate.aggregate(agg, <span class="string">"fastdfs"</span>, JSONObject.class);</span><br><span class="line">        System.out.println(a);</span><br><span class="line">        List&lt;JSONObject&gt; list = a.getMappedResults();</span><br><span class="line">        <span class="keyword">for</span> (JSONObject count : list) &#123;</span><br><span class="line">            System.out.println(count.toString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">      输出结果如下：</span><br><span class="line">      &#123;<span class="string">"date"</span>:<span class="string">"2019-04-11"</span>,<span class="string">"total"</span>:<span class="number">2</span>,<span class="string">"moduleId"</span>:<span class="string">"ismart"</span>&#125;</span><br><span class="line">      &#123;<span class="string">"date"</span>:<span class="string">"2019-04-11"</span>,<span class="string">"total"</span>:<span class="number">750</span>,<span class="string">"moduleId"</span>:<span class="string">"industrial"</span>&#125;</span><br><span class="line">      &#123;<span class="string">"date"</span>:<span class="string">"2019-04-10"</span>,<span class="string">"total"</span>:<span class="number">1239</span>,<span class="string">"moduleId"</span>:<span class="string">"ismart"</span>&#125;</span><br><span class="line">      &#123;<span class="string">"date"</span>:<span class="string">"2019-04-10"</span>,<span class="string">"total"</span>:<span class="number">973</span>,<span class="string">"moduleId"</span>:<span class="string">"industrial"</span>&#125;</span><br><span class="line">      &#123;<span class="string">"date"</span>:<span class="string">"2019-04-08"</span>,<span class="string">"total"</span>:<span class="number">1367</span>,<span class="string">"moduleId"</span>:<span class="string">"ismart"</span>&#125;</span><br><span class="line">      &#123;<span class="string">"date"</span>:<span class="string">"2019-04-08"</span>,<span class="string">"total"</span>:<span class="number">2080</span>,<span class="string">"moduleId"</span>:<span class="string">"industrial"</span>&#125;</span><br><span class="line">      ...</span><br></pre></td></tr></table></figure><p><img src="/img/source/java/mongoDB02.png" alt="image.png"></p><ul><li>需注意SpringBoot版本问题。使用1.5.9.RELEASE版本聚合查询一直报错（如上图），解决方案：升级SpringBoot版本至<strong><em>1.5.10.RELEASE</em></strong>。</li></ul><p>聚合语法参考：</p><table><thead><tr><th align="right">SQL 操作/函数</th><th align="right">mongodb聚合操作</th></tr></thead><tbody><tr><td align="right">where</td><td align="right">$match</td></tr><tr><td align="right">group by</td><td align="right">$group</td></tr><tr><td align="right">having</td><td align="right">$match</td></tr><tr><td align="right">select</td><td align="right">$project</td></tr><tr><td align="right">order by</td><td align="right">$sort</td></tr><tr><td align="right">limit</td><td align="right">$limit</td></tr><tr><td align="right">sum()</td><td align="right">$sum</td></tr><tr><td align="right">count()</td><td align="right">$sum</td></tr><tr><td align="right">join</td><td align="right">$lookup（v3.2 新增）</td></tr></tbody></table><blockquote><p>借鉴文章如下:<br><a href="https://www.cnblogs.com/zhoujie/p/mongo1.html" target="_blank" rel="noopener">mongodb高级聚合查询</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;pom.xml（SpringBoot版本1.5.9）&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span clas
      
    
    </summary>
    
    
      <category term="java" scheme="http://zhuangyea.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>springboot启动类（Application.java）中配置线程池大小</title>
    <link href="http://zhuangyea.github.io/2019/03/25/java/thread/"/>
    <id>http://zhuangyea.github.io/2019/03/25/java/thread/</id>
    <published>2019-03-25T13:20:00.000Z</published>
    <updated>2019-08-22T07:32:09.292Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span>(name = <span class="string">"crawlExecutorPool"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ExecutorService <span class="title">crawlExecutorPool</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 获取Java虚拟机的可用的处理器数，最佳线程个数，处理器数*2。根据实际情况调整</span></span><br><span class="line">        <span class="keyword">int</span> curSystemThreads = Runtime.getRuntime().availableProcessors() * <span class="number">2</span>;</span><br><span class="line">        System.out.println(<span class="string">"------------系统可用线程池个数："</span> + curSystemThreads);</span><br><span class="line">        <span class="comment">// 创建线程池</span></span><br><span class="line">        ExecutorService pool = Executors.newFixedThreadPool(curSystemThreads);</span><br><span class="line">        <span class="keyword">return</span> pool;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>使用类中注入线程池并使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="meta">@Qualifier</span>(value = <span class="string">"crawlExecutorPool"</span>)</span><br><span class="line"><span class="keyword">private</span> ExecutorService pool;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">crawlRedisQueue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2000000</span>; i++) &#123;</span><br><span class="line">        pool.execute(() -&gt; &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">3000</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(Thread.currentThread().getName() + <span class="string">"======定时任务执行完成======"</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
    
      <category term="java" scheme="http://zhuangyea.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>markdown基本布局</title>
    <link href="http://zhuangyea.github.io/2019/01/07/markdown%E5%9F%BA%E6%9C%AC%E5%B8%83%E5%B1%80/"/>
    <id>http://zhuangyea.github.io/2019/01/07/markdown基本布局/</id>
    <published>2019-01-07T12:36:13.000Z</published>
    <updated>2019-08-23T09:34:23.990Z</updated>
    
    <content type="html"><![CDATA[<h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><hr><ul><li>一、前言</li><li>二、Apache poi、jxl 的缺陷</li><li>三、阿里出品的 EasyExcel，安利一波</li><li>四、EasyExcel 解决了什么</li><li>五、快速上手</li><li>六、特殊场景支持</li><li>七、Web 下载示例代码</li><li>八、需要注意的点</li><li>九、总结</li></ul><h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><hr><p>关于导出 Excel 文件，可以说是大多数服务中都需要集成的功能。那么，要如何优雅快速地（偷懒地）去实现这个功能呢？</p><p>你可能第一想法是：这还不简单？用 Apache 开源框架 poi, 或者 jxl 都可以实现啊。面向百度编程，把代码模板 copy 下来，根据自己的业务再改改，能有多难？</p><h2 id="二、目录1"><a href="#二、目录1" class="headerlink" title="二、目录1"></a>二、目录1</h2><hr><ul><li>①：阿斯蒂芬</li><li>②：阿斯蒂芬</li></ul><p><code>asdfasdfasdfasdfs</code></p><pre><code>import com.com.com</code></pre><table><thead><tr><th>区别</th><th align="center">PC端</th><th>移动端</th></tr></thead><tbody><tr><td>1</td><td align="center">2<br>s</td><td>3</td></tr><tr><td>4</td><td align="center">5</td><td>6</td></tr></tbody></table><table>  <tr>    <th>项目1</th>    <th>项目2</th>    <th>项目3</th>  </tr>  <tr>    <td>a1</td>    <td colspan="2">a2</td>  </tr>  <tr>    <td rowspan="2">b1</td>    <td>b2</td>    <td>b3</td>  </tr>  <tr>    <td>c2</td>    <td>c3</td>  </tr></table><blockquote><p><a href="https://segmentfault.com/a/1190000019472781" target="_blank" rel="noopener">布局参考</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h2&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;一、前言&lt;/li&gt;
&lt;li&gt;二、Apache poi、jxl 的缺陷&lt;/li&gt;
&lt;li&gt;三、阿里出品的 EasyExc
      
    
    </summary>
    
      <category term="前端" scheme="http://zhuangyea.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="html" scheme="http://zhuangyea.github.io/tags/html/"/>
    
  </entry>
  
</feed>
